-------------------------------------------------------------------------
Initial REXX INFILE on 23 Mar 2025 at 10:43:20
-------------------------------------------------------------------------
0001 /*REXX program transposes any sized rectangular matrix, displays before & after matrices*/
0002 @.=;     @.1 =   1.02     2.03      3.04       4.05        5.06         6.07          7.08
0003 @.2 = 111     2222     33333     444444     5555555     66666666     777777777
0004 w=0
0005 do    row=1  while @.row\==''
0006 do col=1  until @.row==''; parse var @.row A.row.col @.row
0007 w=max(w, length(A.row.col) )    /*max width for elements*/
0008 end   /*col*/                   /*(used to align ouput).*/
0009 end      /*row*/    /* [↑]  build matrix A from the @ lists*/
0010 row= row-1                                       /*adjust for  DO  loop index increment.*/
0011 do    j=1  for row  /*process each    row    of the matrix.*/
0012 do k=1  for col  /*   "      "    column   "  "     "   */
0013 B.k.j= A.j.k     /*transpose the  A  matrix  (into  B). */
0014 end   /*k*/
0015 end      /*j*/
0016 call showMat  'A', row, col                      /*display the   A   matrix to terminal.*/
0017 call showMat  'B', col, row                      /*   "     "    B      "    "     "    */
0018 exit                                             /*stick a fork in it,  we're all done. */
0019 /*──────────────────────────────────────────────────────────────────────────────────────*/
0020 showMat: arg mat,rows,cols;     say;       say center( mat  'matrix',  (w+1)*cols +4, "─")
0021 do      r=1  for rows;    _=                                  /*newLine*/
0022 do c=1  for cols;    _=_ right( value( mat'.'r"."c), w)  /*append.*/
0023 end   /*c*/
0024 say _                                                         /*1 line.*/
0025 end        /*r*/;         return
-------------------------------------------------------------------------
Cross Reference Table Solid Variable Names
-------------------------------------------------------------------------
001 A.               6
002 w                7
003 row              10
004 j                11
005 k                12
006 B.               13
007 r                21
008 c                22
-------------------------------------------------------------------------
Cross Reference Table Bizarre Variable Names
-------------------------------------------------------------------------
001 @.               -> newV1.           2 2 3 6 6
002 _                -> newV2            21 22
