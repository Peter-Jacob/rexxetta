-------------------------------------------------------------------------
Initial REXX INFILE on 23 Mar 2025 at 10:43:26
-------------------------------------------------------------------------
0001 /*REXX program to show various ways to repeat a string (or repeat a single char).*/
0002 
0003 /*all examples are equivalent, but not created equal.*/
0004 
0005 /*───────────────────────────────────────────*/
0006 y='ha'
0007 z=copies(y,5)
0008 /*───────────────────────────────────────────*/
0009 z=copies( 'ha', 5 )
0010 /*───────────────────────────────────────────*/
0011 y='ha'
0012 z=y||y||y||y||y
0013 /*───────────────────────────────────────────*/
0014 y='ha'
0015 z=y || y || y || y || y    /*same as previous, but the "big sky" version*/
0016 /*───────────────────────────────────────────*/
0017 y='ha'
0018 z=''
0019 do 5
0020 z=z||y
0021 end
0022 /*───────────────────────────────────────────*/
0023 y="ha"
0024 z=
0025 do 5
0026 z=z||y
0027 end
0028 /*───────────────────────────────────────────*/
0029 y="ha"
0030 z=
0031 do i=101 to 105
0032 z=z||y
0033 end
0034 
0035 /*───────────────────────────────────────────*/
0036 y='+'
0037 z=left('',5,y)
0038 /*───────────────────────────────────────────*/
0039 y='+'
0040 z=right('',5,y)
0041 /*───────────────────────────────────────────*/
0042 y='+'
0043 z=substr('',1,5,y)
0044 /*───────────────────────────────────────────*/
0045 y='+'
0046 z=center('',5,y)
0047 /*───────────────────────────────────────────*/
0048 y='+'
0049 z=centre('',5,y)
0050 /*───────────────────────────────────────────*/
0051 y='+'
0052 z=space('',5,y)
0053 /*───────────────────────────────────────────*/
0054 y='+'
0055 z=translate('@@@@@',y,"@")
0056 /*───────────────────────────────────────────*/
0057 y='abcdef'
0058 z=five(y)
0059 exit
0060 
0061 five: procedure expose y; parse arg g
0062 if length(g)>=5*length(y) then return g
0063 return five(y||g)
0064 /*───────────────────────────────────────────*/
0065 y='something wicked this way comes.'
0066 z=y||y||y||y||y||y||y||y||y||y||y||y|\y||y||y
0067 z=left(z,5*length(y))
0068 /*───────────────────────────────────────────*/
0069 y='+'
0070 z=copies('',5,y)
0071 /*───────────────────────────────────────────*/
0072 y='+'
0073 z=lower('',1,5,y)
0074 /*───────────────────────────────────────────*/
0075 y='+'
0076 z=lower('',,5,y)
0077 /*───────────────────────────────────────────*/
0078 z='+'
0079 z=upper('',1,5,y)
0080 /*───────────────────────────────────────────*/
0081 z=upper('',,5,y)
0082 /*───────────────────────────────────────────*/
0083 
0084 y='charter bus.'
0085 z='*****'
0086 z=changestr('*',z,y)
0087 /*───────────────────────────────────────────*/
0088 y='what the hey!'
0089 z=
0090 do until length(z)==5*length(y)
0091 z=z||y
0092 end
0093 /*───────────────────────────────────────────*/
0094 y='what the hey!'
0095 z=
0096 do until length(z)==5*length(y)
0097 z=insert(z,0,y)
0098 end
0099 /*───────────────────────────────────────────*/
0100 y='yippie ki yay'
0101 z=
0102 do i=1 by 5 for 5
0103 z=overlay(y,z,i)
0104 end
0105 /*───────────────────────────────────────────*/
0106 y='+'
0107 z=justify('',5,y)
0108 /*───────────────────────────────────────────*/
0109 whatever_this_variable_is_____it_aint_referenced_directly= 'boy oh boy.'
0110 z=; signal me; me:
0111 do 5
0112 z=z||strip(subword(sourceline(sigl-1),2),,"'")
0113 end
0114 /*───────────────────────────────────────────*/
0115 y="any more examples & the angry townfolk with pitchforks will burn the castle."
0116 parse value y||y||y||y||y with z
0117 
0118 exit                                   /*stick a fork in it, we're done.*/
-------------------------------------------------------------------------
Cross Reference Table Solid Variable Names
-------------------------------------------------------------------------
001 g                61
002 y                65 69 72 75 84 88 94 100 106 115
003 z                66 67 70 73 76 78 79 81 85 86 89 91 95 97 101 103 107 110 112 116
004 until            90 96
005 i                102
006 whatever_this_va 109
007 NORMAL.7         
008 NORMAL.8         
009 NORMAL.9         
010 NORMAL.10        
011 NORMAL.11        
012 NORMAL.12        
013 NORMAL.13        
014 NORMAL.14        
015 NORMAL.15        
016 NORMAL.16        
017 NORMAL.17        
018 NORMAL.18        
019 NORMAL.19        
020 NORMAL.20        
-------------------------------------------------------------------------
Cross Reference Table Bizarre Variable Names
-------------------------------------------------------------------------
