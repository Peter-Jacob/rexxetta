-------------------------------------------------------------------------
Initial REXX INFILE on 23 Mar 2025 at 10:43:11
-------------------------------------------------------------------------
0001 /*REXX program creates a list of (unique) sub─palindromes that exist in an input string.*/
0002 parse arg x .                                    /*obtain optional input string from CL.*/
0003 if x=='' | x==","  then x= 'eertree'             /*Not specified?  Then use the default.*/
0004 L= length(x)                                     /*the length (in chars) of input string*/
0005 @.= .                                            /*@ tree indicates uniqueness of pals. */
0006 $=                                               /*list of unsorted & unique palindromes*/
0007 do     j=1  for L                             /*start at the left side of the string.*/
0008 do k=1  for L                             /*traverse from left to right of string*/
0009 parse var  x   =(j)  y   +(k)             /*extract a substring from the string. */
0010 if reverse(y)\==y | @.y\==.  then iterate /*Partial string a palindrome?  Skip it*/
0011 @.y= y                                    /*indicate a sub─palindrome was found. */
0012 $= $' '  y                                /*append the sub─palindrome to the list*/
0013 end   /*k*/                               /* [↑]  an extra blank is inserted.    */
0014 end       /*j*/
0015 
0016 say '──────── The input string that is being used: '     space(x)
0017 say '──────── The number of sub─palindromes found: '     words($)
0018 say '──────── The  list  of sub─palindromes found: '     strip($)
0019 /*stick a fork in it,  we're all done. */
-------------------------------------------------------------------------
Cross Reference Table Solid Variable Names
-------------------------------------------------------------------------
001 x                9
002 y                9
-------------------------------------------------------------------------
Cross Reference Table Bizarre Variable Names
-------------------------------------------------------------------------
001 =(j)             -> newV1            9
002 +(k)             -> newV2            9
003 @.               -> newV3.           5 11
004 $                -> newV4            6 12
