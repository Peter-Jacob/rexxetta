-------------------------------------------------------------------------
Initial REXX INFILE on 23 Mar 2025 at 10:43:16
-------------------------------------------------------------------------
0001 /*REXX program to calculate and show the Hickerson series (are near integer). */
0002 numeric digits length(ln2())-length(.) /*be able to calculate big factorials. */
0003 parse arg N .                          /*get optional number of values to use.*/
0004 if N==''  then N= 1                    /*Not specified?  Then use the default.*/
0005 /* [↓]  compute possible Hickerson #s. */
0006 do j=1  for N;  #= Hickerson(j)   /*traipse thru a range of Hickerson #s.*/
0007 ?= right(# * 10 % 1,  1)          /*get 1st decimal digit past dec. point*/
0008 if ?==0 | ?==9  then _= 'almost integer'                /*the number is, */
0009 else _= '              '                /*  or it ain't. */
0010 say right(j,3)  _  format(#, , 5) /*show number with 5 dec digs fraction.*/
0011 end   /*j*/
0012 exit                                   /*stick a fork in it,  we're all done. */
0013 /*─────────────────────────────────────────────────────────────────────────────────────────────────────────*/
0014 !:         procedure; parse arg x; !=1;   do j=2  to x; != !*j;  end;   return !  /* ◄──compute X factorial*/
0015 Hickerson: procedure; parse arg z;        return  !(z)  /  (2*ln2() ** (z+1))
0016 ln2: return .69314718055994530941723212145817656807550013436025525412068000949339362196969471560586332699641,
0017 || 8687542001481020570685733685520235758130557032670751635075961930727570828371435190307038623891673471123,
0018 || 3501153644979552391204751726815749320651555247341395258829504530070953263666426541042391578149520437404,
0019 || 3038550080194417064167151864471283996817178454695702627163106454615025720740248163777338963855069526066,
0020 || 83411372738737229289564935470257626520988596932019650585547647033067936544325476327449512504060694381470
-------------------------------------------------------------------------
Cross Reference Table Solid Variable Names
-------------------------------------------------------------------------
001 z                15
-------------------------------------------------------------------------
Cross Reference Table Bizarre Variable Names
-------------------------------------------------------------------------
001 #                -> newV1            6
002 ?                -> newV2            7
003 _                -> newV3            8
004 !                -> newV4            14 14
