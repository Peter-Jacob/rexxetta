-------------------------------------------------------------------------
Initial REXX INFILE on 23 Mar 2025 at 10:43:16
-------------------------------------------------------------------------
0001 /* REXX ---------------------------------------------------------------
0002 * 04.01.2014 Walter Pachl - using a rather aged ln function of mine
0003 *                           with probably unreasonably high precision
0004 * 05.01.2014 added n=18
0005 *--------------------------------------------------------------------*/
0006 Numeric Digits 100
0007 Do n=1 To 18
0008 x=format(def(),20,10)
0009 Parse Var x '.' +1 d +1
0010 If pos(d,'09')>0 Then
0011 tag='almost an integer'
0012 Else
0013 tag=''
0014 Say right(n,2) x tag
0015 End
0016 Exit
0017 
0018 def:
0019 x=fact(n)/(2*ln(2,200)**(n + 1))
0020 Return x
0021 
0022 ln: Procedure
0023 /***********************************************************************
0024 * Return ln(x) -- with specified precision
0025 * Three different series are used for the ranges  0 to 0.5
0026 *                                                 0.5 to 1.5
0027 *                                                 1.5 to infinity
0028 * 920903 Walter Pachl
0029 ***********************************************************************/
0030 Parse Arg x,prec,b
0031 If prec='' Then prec=9
0032 Numeric Digits (2*prec)
0033 Numeric Fuzz   3
0034 Select
0035 When x<=0 Then r='*** invalid argument ***'
0036 When x<0.5 Then Do
0037 z=(x-1)/(x+1)
0038 o=z
0039 r=z
0040 k=1
0041 Do i=3 By 2
0042 ra=r
0043 k=k+1
0044 o=o*z*z
0045 r=r+o/i
0046 If r=ra Then Leave
0047 End
0048 r=2*r
0049 End
0050 When x<1.5 Then Do
0051 z=(x-1)
0052 o=z
0053 r=z
0054 k=1
0055 Do i=2 By 1
0056 ra=r
0057 k=k+1
0058 o=-o*z
0059 r=r+o/i
0060 If r=ra Then Leave
0061 End
0062 End
0063 Otherwise /* 1.5<=x */ Do
0064 z=(x+1)/(x-1)
0065 o=1/z
0066 r=o
0067 k=1
0068 Do i=3 By 2
0069 ra=r
0070 k=k+1
0071 o=o/(z*z)
0072 r=r+o/i
0073 If r=ra Then Leave
0074 End
0075 r=2*r
0076 End
0077 End
0078 If b<>'' Then
0079 r=r/ln(b)
0080 Numeric Digits (prec)
0081 Return r+0
0082 
0083 fact: Procedure
0084 Parse Arg m
0085 fact=1
0086 Do i=2 To m
0087 fact=fact*i
0088 End
0089 Return fact
-------------------------------------------------------------------------
Cross Reference Table Solid Variable Names
-------------------------------------------------------------------------
001 m                84
002 fact             85 87
003 i                86
-------------------------------------------------------------------------
Cross Reference Table Bizarre Variable Names
-------------------------------------------------------------------------
