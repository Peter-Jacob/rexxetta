-------------------------------------------------------------------------
Initial REXX INFILE on 23 Mar 2025 at 10:43:17
-------------------------------------------------------------------------
0001 /*REXX program  creates and displays any sized  identity matrix  (centered, with title).*/
0002 do k=3  to 6                          /* [↓]  build and display a sq. matrix.*/
0003 call ident_mat  k                     /*build & display a KxK square matrix. */
0004 end   /*k*/                           /* [↑]  use general─purpose display sub*/
0005 exit                                             /*stick a fork in it,  we're all done. */
0006 /*──────────────────────────────────────────────────────────────────────────────────────*/
0007 ident_mat: procedure;  parse arg n; $=
0008 do    r=1  for n                   /*build identity matrix, by row and col*/
0009 do c=1  for n;     $= $ (r==c)  /*append  zero  or  one  (if on diag). */
0010 end   /*c*/
0011 end      /*r*/
0012 call showMat  'identity matrix of size'   n,   $
0013 return
0014 /*──────────────────────────────────────────────────────────────────────────────────────*/
0015 showMat: procedure; parse arg hdr,x;  #=words(x) /*#  is the number of matrix elements. */
0016 dp= 0                                   /*DP:  max width of decimal fractions. */
0017 w= 0                                    /*W:   max width of integer part.      */
0018 do n=1  until n*n>=#;  _= word(x,n)      /*determine the matrix order. */
0019 parse var _ y '.' f;   w= max(w, length(y));      dp= max(dp, length(f) )
0020 end   /*n*/                     /* [↑]  idiomatically find the widths. */
0021 w= w +1
0022 say;  say center(hdr, max(length(hdr)+8, (w+1)*#%n), '─');  say
0023 #= 0                                                            /*#: element #.*/
0024 do   row=1  for n;     _= left('', n+w)                 /*indentation. */
0025 do col=1  for n;     #= # + 1                         /*bump element.*/
0026 _=_ right(format(word(x, #), , dp)/1, w)
0027 end   /*col*/                 /* [↑]  division by unity normalizes #.*/
0028 say _                           /*display a single line of the matrix. */
0029 end     /*row*/
0030 return
-------------------------------------------------------------------------
Cross Reference Table Solid Variable Names
-------------------------------------------------------------------------
001 y                19
002 f                19
003 w                19 21
004 dp               19
005 row              24
006 col              25
-------------------------------------------------------------------------
Cross Reference Table Bizarre Variable Names
-------------------------------------------------------------------------
001 $                -> newV1            7 9
002 #                -> newV2            15 23 25
003 _                -> newV3            18 19 24 26
