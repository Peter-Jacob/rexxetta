-------------------------------------------------------------------------
Initial REXX INFILE on 23 Mar 2025 at 10:43:32
-------------------------------------------------------------------------
0001 /*REXX pgm finds & shows the sum of elements below the main diagonal of a square matrix.*/
0002 $= '1 3 7 8 10 2 4 16 14 4 3 1 9 18 11 12 14 17 18 20 7 1 3 9 5';       #= words($)
0003 do siz=1  while siz*siz<#;  end             /*determine the size of the matrix.    */
0004 w= 0                                             /*W:  the maximum width any any element*/
0005 do j=1  for #;         parse var $  @..j  $ /*obtain a number of the array (list). */
0006 w= max(w, length(@..j))                     /*examine each element for its width.  */
0007 end   /*j*/                                 /* [â†‘] this is aligning matrix elements*/
0008 s= 0;                       z= 0                 /*initialize the sum  [S]  to zero.    */
0009 do      r=1  for siz;  _= left('', 12)      /*_:  contains a row of matrix elements*/
0010 do c=1  for siz;  z= z + 1;  @.z= @..z /*get a  number  of the    "      "    */
0011 _= _  right(@.z, w)                    /*build a row of elements for display. */
0012 if c<r  then s= s + @.z                /*add a  "lower element"  to the sum.  */
0013 end   /*r*/
0014 say _                                       /*display a row of the matrix to term. */
0015 end        /*c*/
0016 say 'sum of elements below main diagonal is: ' s /*stick a fork in it,  we're all done. */
-------------------------------------------------------------------------
Cross Reference Table Solid Variable Names
-------------------------------------------------------------------------
001 w                6
002 s                8 12
003 z                8 10
004 r                9
005 c                10
-------------------------------------------------------------------------
Cross Reference Table Bizarre Variable Names
-------------------------------------------------------------------------
001 @.               -> newV1.           5 10
002 $                -> newV2            2 5 5
003 #                -> newV3            2
004 _                -> newV4            9 11
