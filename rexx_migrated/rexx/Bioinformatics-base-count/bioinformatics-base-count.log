-------------------------------------------------------------------------
Initial REXX INFILE on 23 Mar 2025 at 10:43:06
-------------------------------------------------------------------------
0001 /*REXX program finds the number of each base in a DNA  string          */
0002 /*                                         (along with a total).       */
0003 Parse Arg dna .
0004 If dna==''|dna==',' Then
0005 dna='cgtaaaaaattacaacgtcctttggctatctcttaaactcctgctaaatg',
0006 'ctcgtgctttccaattatgtaagcgttccgagacggggtggtcgattctg',
0007 'aggacaaaggtcaagatggagcgcatcgaacgcaataaggatcatttgat',
0008 'gggacgtttcgtcgacaaagtcttgtttcgagagtaacggctaccgtctt',
0009 'cgattctgcttataacactatgttcttatgaaatggatgttctgagttgg',
0010 'tcagtcccaatgtgcggggtttcttttagtacgtcgggagtggtattata',
0011 'tttaatttttctatatagcgatctgtatttaagcaattcatttaggttat',
0012 'cgccgcgatgctcggttcggaccgccaagcatctggctccactgctagtg',
0013 'tcctaaatttgaatggcaaacacaaataagatttagcaattcgtgtagac',
0014 'gaccggggacttgcatgatgggagcagctttgttaaactacgaacgtaat'
0015 dna=translate(space(dna,0))          /* elide blanks from DNA; uppercas*/
0016 Say '--------length of the DNA string: ' length(dna)
0017 count.=0                          /* initialize the count for all bases*/
0018 w=1                               /* the maximum width of a base count */
0019 names=''                          /* list of all names                 */
0020 Do j=1 To length(dna)             /* traipse through the  DNA  string  */
0021 name=substr(dna,j,1)            /* obtain a base name from the DNA   */
0022 If pos(name,names)==0 Then
0023 names=names||name             /* if not found, add it to the list  */
0024 count.name=count.name+1         /* bump the count of this base.      */
0025 w=max(w,length(count.name))     /* compute the maximum number width  */
0026 End
0027 Say
0028 Do k=0 To 255
0029 z=d2c(k)                        /* traipse through all possibilities */
0030 If pos(z,names)>0 Then Do
0031 Say '     base ' z ' has a basecount of: ' right(count.z,w)
0032 count.tot=count.tot+count.z   /* add to a grand total to verify    */
0033 End
0034 End
0035 Say
0036 Say '--------total for all basecounts:' right(count.tot,w+1)
-------------------------------------------------------------------------
Cross Reference Table Solid Variable Names
-------------------------------------------------------------------------
001 dna              3 5 15
002 count.           17 24 32
003 w                18 25
004 names            19 23
005 j                20
006 name             21
007 k                28
008 z                29
-------------------------------------------------------------------------
Cross Reference Table Bizarre Variable Names
-------------------------------------------------------------------------
