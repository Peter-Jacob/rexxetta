-------------------------------------------------------------------------
Initial REXX INFILE on 23 Mar 2025 at 10:43:14
-------------------------------------------------------------------------
0001 /*REXX program  computes the   forward difference   of a  list of numbers.              */
0002 numeric digits 100                               /*ensure enough accuracy (decimal digs)*/
0003 parse arg e ',' N                                /*get a list:  ε1 ε2 ε3 ε4 ··· , order */
0004 if e==''  then e=90 47 58 29 22 32 55 5 55 73    /*Not specified?  Then use the default.*/
0005 #=words(e)                                       /*#  is the number of elements in list.*/
0006 /* [↓]  assign list numbers to @ array.*/
0007 do i=1  for #;  @.i=word(e, i)/1;  end /*i*/  /*process each number one at a time.   */
0008 /* [↓]  process the optional order.    */
0009 if N==''  then parse value 0 # # with bot top N  /*define the default  order  range.    */
0010 else parse var N bot 1 top             /*Not specified?  Then use only 1 order*/
0011 say right(#  'numbers:', 44)  e                  /*display the header title   and  ···  */
0012 say left('', 44)copies('─', length(e)+2)         /*   "     "     "   fence.            */
0013 /* [↓]  where da rubber meets da road. */
0014 do o=bot  to top;        do r=1  for #;  !.r=@.r;     end /*r*/;        $=
0015 do j=1  for o; d=!.j;  do k=j+1  to #; parse value !.k !.k-d with d !.k; end /*k*/
0016 end   /*j*/
0017 do i=o+1  to #; $=$ !.i/1;   end /*i*/
0018 if $==''  then $=' [null]'
0019 say right(o, 7)th(o)'─order forward difference vector ='     $
0020 end     /*o*/
0021 exit                                             /*stick a fork in it,  we're all done. */
0022 /*──────────────────────────────────────────────────────────────────────────────────────*/
0023 th: procedure; x=abs(arg(1)); return word('th st nd rd',1+x//10*(x//100%10\==1)*(x//10<4))
-------------------------------------------------------------------------
Cross Reference Table Solid Variable Names
-------------------------------------------------------------------------
001 N                10
002 bot              10
003 top              10
004 o                14
005 r                14
006 j                15
007 d                15 15
008 k                15
009 NORMAL.9         
010 NORMAL.10        
011 NORMAL.11        
012 NORMAL.12        
013 bot              9
014 top              9
015 NORMAL.15        
016 NORMAL.16        
017 i                17
018 x                23
-------------------------------------------------------------------------
Cross Reference Table Bizarre Variable Names
-------------------------------------------------------------------------
001 @.               -> newV1.           7
002 !.               -> newV2.           14 15
003 #                -> newV3            5
004 $                -> newV4            14 17 18
