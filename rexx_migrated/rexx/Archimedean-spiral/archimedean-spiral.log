-------------------------------------------------------------------------
Initial REXX INFILE on 23 Mar 2025 at 10:43:05
-------------------------------------------------------------------------
0001 /*REXX pgm plots several cycles (half a spiral) of the  Archimedean spiral (ASCII plot).*/
0002 parse arg cy a b inc chr .                       /*obtain optional arguments from the CL*/
0003 if  cy=='' |  cy==","   then  cy= 3              /*Not specified?  Then use the default.*/
0004 if   a=='' |   a==","   then   a= 1              /* "      "         "   "   "     "    */
0005 if   b=='' |   b==","   then   b= 9              /* "      "         "   "   "     "    */
0006 if inc=='' | inc==","   then inc= 0.02           /* "      "         "   "   "     "    */
0007 if chr=='' | chr==","   then chr= '∙'            /* "      "         "   "   "     "    */
0008 if length(chr)==3  then chr= d2c(chr)            /*plot character coded in     decimal? */
0009 if length(chr)==2  then chr= x2c(chr)            /*  "      "       "    " hexadecimal? */
0010 cy= max(2, cy);         LOx= .                   /*set the  LOx  variable (a semaphore).*/
0011 parse value scrsize()   with   sd  sw  .         /*get the size of the terminal screen. */
0012 w= sw - 1        ;      mw= w * (cy-1) * 4       /*set useable width; max width for calc*/
0013 h= sd - 1 + cy*10;      mh= h * (cy-1)           /* "     "    depth;  "  depth  "   "  */
0014 @.=                                              /*initialize the line based plot field.*/
0015 do t=1  to pi()*cy  by inc              /*calc all the coördinates for spiral. */
0016 r= a +  b*    t                         /*  "   "   "       R       "    "     */
0017 x= w +  r*cos(t);     xx= x % 2         /*  "   "   "       X       "    "     */
0018 y= h +  r*sin(t);     yy= y % 2         /*  "   "   "       Y       "    "     */
0019 if x<0 | y<0 | x>mw | y>mh then iterate /*Is X or Y  out of bounds?  Then skip.*/
0020 if LOx==.  then do;   LOx= xx;      HIx= xx;      LOy= yy;       HIy= yy
0021 end                     /* [↑]  find the minimums and maximums.*/
0022 LOx= min(LOx, xx);    HIx= max(HIx, xx) /*determine the   X   MIN  and  MAX.   */
0023 LOy= min(LOy, yy);    HIy= max(HIy, yy) /*    "      "    Y    "    "    "     */
0024 @.yy= overlay(chr, @.yy, xx+1)          /*assign the plot character (glyph).   */
0025 end   /*t*/
0026 call plot                                        /*invoke plotting subroutine (to term).*/
0027 exit                                             /*stick a fork in it,  we're all done. */
0028 /*──────────────────────────────────────────────────────────────────────────────────────*/
0029 pi:   pi=3.1415926535897932384626433832795028841971693993751058209749445923078; return pi
0030 plot:      do row=HIy  to LOy  by -1;   say substr(@.row, LOx+1);   end;        return
0031 r2r:  return arg(1)  //  (pi() * 2)             /*normalize radians ───► a unit circle.*/
0032 /*──────────────────────────────────────────────────────────────────────────────────────*/
0033 cos:  procedure; parse arg x;  x= r2r(x);  _= 1;  a= abs(x);    hpi= pi * .5
0034 numeric fuzz  min(6, digits() - 3);         if a=pi       then return -1
0035 if a=hpi | a=hpi*3  then return  0          if a=pi / 3   then return .5
0036 if a=pi * 2 / 3     then return -.5;        q= x*x;       z= 1
0037 do k=2  by 2  until p=z;   p= z;   _= -_ *q/(k*k-k);    z= z+_;   end;    return z
0038 /*──────────────────────────────────────────────────────────────────────────────────────*/
0039 sin:  procedure; parse arg x;  x= r2r(x);  _= x;  numeric fuzz min(5, max(1, digits() -3))
0040 if x=pi * .5         then return 1;         if x==pi*1.5  then return -1
0041 if abs(x)=pi | x=0   then return 0;         q= x*x;       z= x
0042 do k=2  by 2  until p=z;   p= z;   _= -_ *q/(k*k+k);    z= z+_;   end;    return z
-------------------------------------------------------------------------
Cross Reference Table Solid Variable Names
-------------------------------------------------------------------------
001 x                39 39
002 q                41
003 z                41 42
004 k                42
005 p                42
-------------------------------------------------------------------------
Cross Reference Table Bizarre Variable Names
-------------------------------------------------------------------------
001 @.               -> newV1.           14 24
002 _                -> newV2            33 37 39 42
