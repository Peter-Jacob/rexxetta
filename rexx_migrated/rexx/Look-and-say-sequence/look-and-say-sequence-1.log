-------------------------------------------------------------------------
Initial REXX INFILE on 23 Mar 2025 at 10:43:19
-------------------------------------------------------------------------
0001 /*REXX program displays the sequence (and/or lengths) for the    look and say    series.*/
0002 parse arg N ! .                                  /*obtain optional arguments from the CL*/
0003 if N=='' | N==","  then N= 20                    /*Not specified?  Then use the default.*/
0004 if !=='' | !==","  then !=  1                    /* "      "         "   "   "     "    */
0005 
0006 do j=1  for abs(N)                          /*repeat a number of times to show NUMS*/
0007 if j\==1  then != lookNsay(!)               /*invoke function to calculate next #. */
0008 if N<0    then say 'length['j"]:" length(!) /*Also,  display the sequence's length.*/
0009 else say '['j"]:"      !          /*display the number to the terminal.  */
0010 end   /*j*/
0011 exit 0                                           /*stick a fork in it,  we're all done. */
0012 /*──────────────────────────────────────────────────────────────────────────────────────*/
0013 lookNsay: procedure; parse arg x,,$              /*obtain the (passed) argument  {X}.   */
0014 fin = '0'x                             /*use unique character to end scanning.*/
0015 x= x || fin                            /*append the  FIN  character to string.*/
0016 do k=1  by 0               /*now,  process the given sequence.    */
0017 y=  substr(x, k, 1)        /*pick off one character to examine.   */
0018 if y== fin  then return $  /*if we're at the end, then we're done.*/
0019 _= verify(x, y, , k) - k   /*see how many characters we have of Y.*/
0020 $= $  ||  _  ||  y         /*build the  "look and say"  sequence. */
0021 k= k + _                   /*now, point to the next character.    */
0022 end   /*k*/
-------------------------------------------------------------------------
Cross Reference Table Solid Variable Names
-------------------------------------------------------------------------
001 x                13 15
002 fin              14
003 k                16 21
004 y                17
-------------------------------------------------------------------------
Cross Reference Table Bizarre Variable Names
-------------------------------------------------------------------------
001 !                -> newV1            2 4 7
002 $                -> newV2            13 20
003 _                -> newV3            19
