-------------------------------------------------------------------------
Initial REXX INFILE on 23 Mar 2025 at 10:43:04
-------------------------------------------------------------------------
0001 /* REXX **************************************************************
0002 * 25.08.2013 Walter Pachl derived from PL/I
0003 *********************************************************************/
0004 mm=0
0005 w.=''
0006 l.=0
0007 Call mkset 1,'the that a if'
0008 Call mkset 2,'frog elephant thing'
0009 Call mkset 3,'walked treaded grows trots'
0010 Call mkset 4,'slowly quickly'
0011 
0012 Call show
0013 Do i=1 to 3                           /* loop over sets             */
0014 Call showm
0015 k=i+1                               /* the following set          */
0016 Do ii=1 To 10                       /* loop over elements in set k*/
0017 If words(w.i.ii)=i Then Do        /* a sentence part found      */
0018 Do jj=1 To 10                   /* loop over following words  */
0019 If right(w.i.ii,1)=left(w.k.jj,1) Then Do  /* fitting       */
0020 ns=w.i.ii' 'w.k.jj          /* build new sentence (part)  */
0021 If words(ns)=k Then         /* 'complete' part            */
0022 Call add k,ns             /* add to set k               */
0023 End
0024 End
0025 End
0026 End
0027 End
0028 
0029 Do jj=1 To 10                         /* show the results           */
0030 If words(w.4.jj)=4 Then
0031 Say '-->' w.4.jj
0032 End
0033 Return
0034 
0035 add: Procedure Expose w.
0036 /*********************************************************************
0037 * add a sentence (part) to set ni
0038 *********************************************************************/
0039 Parse Arg ni,s
0040 Do i=1 To 10 While w.ni.i>''        /* look for an empty slot     */
0041 End
0042 w.ni.i=s                            /* add the sentence (part)    */
0043 Return
0044 
0045 mkset: Procedure Expose w. mm l.
0046 /*********************************************************************
0047 * initialize the sets
0048 *********************************************************************/
0049 Parse Arg i,wl
0050 Do j=1 By 1 While wl<>''
0051 Parse Var wl w.i.j wl
0052 l.i=max(l.i,length(w.i.j))
0053 End
0054 mm=max(mm,j-1)
0055 Return
0056 
0057 show: Procedure Expose w. mm l.
0058 /*********************************************************************
0059 * show the input
0060 *********************************************************************/
0061 Say 'Input:'
0062 Do j=1 To mm                          /* output lines               */
0063 ol=''
0064 Do i=1 To 4
0065 ol=ol left(w.i.j,l.i)
0066 End
0067 Say strip(ol)
0068 End;
0069 say ''
0070 Return
0071 
0072 showm: Procedure Expose w.
0073 /*********************************************************************
0074 * show the sets' contents
0075 *********************************************************************/
0076 dbg=0
0077 If dbg Then Do
0078 Do i=1 To 4
0079 Do j=1 To 10
0080 If w.i.j>'' Then
0081 Say i j w.i.j
0082 End
0083 End
0084 End
0085 Return
-------------------------------------------------------------------------
Cross Reference Table Solid Variable Names
-------------------------------------------------------------------------
001 wl               51 51
002 w.               51
003 l.               52
004 mm               54
005 j                62 79
006 ol               63 65
007 i                64 78
008 dbg              76
-------------------------------------------------------------------------
Cross Reference Table Bizarre Variable Names
-------------------------------------------------------------------------
