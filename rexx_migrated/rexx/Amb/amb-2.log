-------------------------------------------------------------------------
Initial REXX INFILE on 23 Mar 2025 at 10:43:04
-------------------------------------------------------------------------
0001 /*REXX program  demonstrates  the   Amd   operator,   choosing a  word  from each  set. */
0002 @.1 = "the     that      a"
0003 @.2 = "frog    elephant  thing"
0004 @.3 = "walked  treaded   grows"
0005 @.4 = "slowly  quickly"
0006 @.0 = 4                           /*define the number of sets being ised.*/
0007 call Amb 1                                       /*find all word combinations that works*/
0008 exit                                             /*stick a fork in it,  we're all done. */
0009 /*--------------------------------------------------------------------------------------*/
0010 Amb: procedure expose @.;   parse arg # x;     arg . u       /*ARG uppercases U value.  */
0011 if #>@.0  then do;  y= word(u, 1)                       /*Y:  is a  uppercased  U. */
0012 do n=2  to words(u);                ?= word(u, n)
0013 if left(?, 1) \== right(y, 1)  then return;    y= ?
0014 end   /*n*/
0015 say strip(x)                        /*Â¬show superfluous blanks.*/
0016 end
0017 do j=1  for words(@.#);  call Amb #+1 x word(@.#, j) /*gen all combos recursively*/
0018 end   /*j*/;             return
-------------------------------------------------------------------------
Cross Reference Table Solid Variable Names
-------------------------------------------------------------------------
001 x                10
002 y                11 13
003 n                12
004 j                17
-------------------------------------------------------------------------
Cross Reference Table Bizarre Variable Names
-------------------------------------------------------------------------
001 @.               -> newV1.           2 3 4 5 6
002 #                -> newV2            10
003 ?                -> newV3            12
