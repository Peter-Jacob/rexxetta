-------------------------------------------------------------------------
Initial REXX INFILE on 23 Mar 2025 at 10:43:25
-------------------------------------------------------------------------
0001 /*REXX pgm computes/shows (integers),  D  that aren't possible for: a² + b² + c²  =  d² */
0002 parse arg hi .                                   /*obtain optional argument from the CL.*/
0003 if hi=='' | hi==","  then hi=2200;  high= 3 * hi /*Not specified?  Then use the default.*/
0004 @.=.                                             /*array of integers to be squared.     */
0005 !.=.                                             /*  "    "     "    squared.           */
0006 do j=1  for high                          /*precompute possible squares (to max).*/
0007 _= j*j;   !._= j;   if j<=hi  then @.j= _ /*define a square; D  value; squared # */
0008 end   /*j*/
0009 d.=.                                             /*array of possible solutions  (D)     */
0010 do       a=1  for hi-2;  aodd= a//2       /*go hunting for solutions to equation.*/
0011 do    b=a   to hi-1;
0012 if aodd  then  if b//2  then iterate   /*Are  A  and  B  both odd?  Then skip.*/
0013 ab = @.a + @.b                         /*calculate sum of  2  (A,B)   squares.*/
0014 do c=b   to hi;     abc= ab  + @.c  /*    "      "   "  3  (A,B,C)    "    */
0015 if !.abc==.  then iterate           /*Not a square? Then skip it*/
0016 s=!.abc;    d.s=                    /*define this D solution as being found*/
0017 end   /*c*/
0018 end      /*b*/
0019 end         /*a*/
0020 say
0021 say 'Not possible positive integers for   d ≤' hi "  using equation:  a² + b² + c²  =  d²"
0022 say
0023 $=                                               /* [↓]  find all the  "not possibles". */
0024 do p=1  for hi;   if d.p==.  then $=$ p   /*Not possible? Then add it to the list*/
0025 end   /*p*/                               /* [↓]  display list of not-possibles. */
0026 say substr($, 2)                                 /*stick a fork in it,  we're all done. */
-------------------------------------------------------------------------
Cross Reference Table Solid Variable Names
-------------------------------------------------------------------------
001 hi               2 3
002 high             3
003 j                6
004 d.               9 16
005 a                10
006 aodd             10
007 b                11
008 ab               13
009 c                14
010 abc              14
011 s                16
012 p                24
-------------------------------------------------------------------------
Cross Reference Table Bizarre Variable Names
-------------------------------------------------------------------------
001 @.               -> newV1.           4 7
002 !.               -> newV2.           5 7
003 _                -> newV3            7
004 $                -> newV4            23 24
