-------------------------------------------------------------------------
Initial REXX INFILE on 23 Mar 2025 at 10:43:11
-------------------------------------------------------------------------
0001 /*REXX program computes the dot product of two equal size vectors (of any size).*/
0002 vectorA =  '  1   3  -5  '               /*populate vector  A  with some numbers*/
0003 vectorB =  '  4  -2  -1  '               /*    "       "    B    "    "     "   */
0004 Say  'vector A =' vectorA                /*display the elements of vector A.    */
0005 Say  'vector B =' vectorB                /*   "     "     "      "   "    B.    */
0006 p=dot_product(vectorA,vectorB)           /*invoke function & compute dot product*/
0007 Say                                      /*display a blank line for readability.*/
0008 Say 'dot product =' p                    /*display the dot product              */
0009 Exit                                     /*stick a fork in it,  we're all done. */
0010 /*------------------------------------------------------------------------------*/
0011 dot_product:                             /* compute the dot product             */
0012 Parse Arg A,B
0013 /* Begin Error Checking                                                       */
0014 If words(A)<>words(B) Then
0015 Call exit 'Vectors aren''t the same size:' words(A) '<>' words(B)
0016 Do i=1 To words(A)
0017 If datatype(word(A,i))<>'NUM' Then
0018 Call exit 'Element' i 'of vector A isn''t a number:' word(A,i)
0019 If datatype(word(B,i))<>'NUM' Then
0020 Call exit 'Element' i 'of vector B isn''t a number:' word(B,i)
0021 End
0022 /* End Error Checking                                                         */
0023 product=0                              /* initialize the  sum  to   0  (zero).*/
0024 Do i=1 To words(A)
0025 product=product+word(A,i)*word(B,i)  /*multiply corresponding numbers       */
0026 End
0027 Return product
0028 exit:
0029 Say '***error***' arg(1)
0030 Exit 13
-------------------------------------------------------------------------
Cross Reference Table Solid Variable Names
-------------------------------------------------------------------------
001 A                12
002 B                12
003 i                16 24
004 product          23 25
-------------------------------------------------------------------------
Cross Reference Table Bizarre Variable Names
-------------------------------------------------------------------------
