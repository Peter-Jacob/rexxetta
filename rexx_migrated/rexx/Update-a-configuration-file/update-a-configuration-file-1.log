-------------------------------------------------------------------------
Initial REXX INFILE on 23 Mar 2025 at 10:43:34
-------------------------------------------------------------------------
0001 /*REXX program demonstrates how to  update  a configuration file  (four specific tasks).*/
0002 parse arg iFID oFID .                            /*obtain optional arguments from the CL*/
0003 if iFID=='' | iFID==","  then iFID=      'UPDATECF.TXT'  /*Not given?  Then use default.*/
0004 if oFID=='' | oFID==","  then oFID='\TEMP\UPDATECF.$$$'  /* "    "       "   "     "    */
0005 call lineout iFID;  call lineout oFID            /*close the input and the output files.*/
0006 $.=0                                             /*placeholder of the options detected. */
0007 call dos  'ERASE'  oFID                          /*erase a file (with no error message).*/
0008 changed=0                                        /*nothing changed in the file (so far).*/
0009 /* [↓]  read the entire  config  file. */
0010 do rec=0  while lines(iFID)\==0                /*read a record; bump the record count.*/
0011 z=linein(iFID);          zz=space(z)           /*get record;  elide extraneous blanks.*/
0012 say '───────── record:'  z                     /*echo the record just read ──► console*/
0013 a=left(zz,1);  _=space( translate(zz, ,';') )  /*_:  is used to elide multiple  ";"   */
0014 if zz=='' | a=='#'  then do; call cpy z; iterate; end            /*blank or a comment.*/
0015 if _==''  then do; changed=1; iterate; end     /*elide any semicolons;  empty records.*/
0016 parse upper var z op .                         /*obtain the option from the record.   */
0017 /* [↓]   option may have leading or ···*/
0018 if a==';'  then do;   parse upper var z 2 op .                      /*trailing blanks.*/
0019 if op='SEEDSREMOVED'  then call new space( substr(z, 2) )
0020 call cpy z;  $.op=1            /*write the Z record to the output file*/
0021 iterate  /*rec*/               /* ··· and then go read the next record*/
0022 end
0023 if $.op  then do;  changed=1;  iterate;  end   /*is the  option  already defined?     */
0024 $.op=1                                         /* [↑]  Yes?   Then delete it.         */
0025 if op=='NEEDSPEELING'          then call new  ";"    z
0026 if op=='NUMBEROFBANANAS'       then call new  op  1024
0027 if op=='NUMBEROFSTRAWBERRIES'  then call new  op  62000
0028 call cpy z                                     /*write the Z record to the output file*/
0029 end   /*rec*/
0030 
0031 nos='NUMBEROFSTRAWBERRIES'                  /* [↓]  Does NOS option need updating? */
0032 if \$.nos   then do;  call new nos 62000;  call cpy z;  end             /*update option.*/
0033 call lineout iFID;    call lineout oFID          /*close the input and the output files.*/
0034 if rec==0   then do;  say "ERROR:  input file wasn't found:"  iFID;  exit;  end
0035 if changed  then do                              /*possibly overwrite the input file.   */
0036 call dos 'XCOPY' oFID iFID '/y /q',">nul"                     /*quietly*/
0037 say;   say center('output file', 79, "▒")                     /*title. */
0038 call dos 'TYPE'  oFID           /*display content of the output file.  */
0039 end
0040 call dos 'ERASE'  oFID                           /*erase a file (with no error message).*/
0041 exit                                             /*stick a fork in it,  we're all done. */
0042 /*──────────────────────────────────────────────────────────────────────────────────────*/
0043 cpy:  call lineout oFID, arg(1);        return   /*write one line of text ───► oFID.    */
0044 dos:  ''arg(1) word(arg(2) "2>nul",1);  return   /*execute a  DOS  command  (quietly).  */
0045 new:  z=arg(1);    changed=1;           return   /*use new Z, indicate changed record.  */
-------------------------------------------------------------------------
Cross Reference Table Solid Variable Names
-------------------------------------------------------------------------
001 z                18
002 op               18
003 changed          23 45
004 nos              31
-------------------------------------------------------------------------
Cross Reference Table Bizarre Variable Names
-------------------------------------------------------------------------
001 $.               -> newV1.           6 20 24
002 _                -> newV2            13
