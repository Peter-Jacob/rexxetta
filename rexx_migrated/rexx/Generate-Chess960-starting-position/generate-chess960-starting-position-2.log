-------------------------------------------------------------------------
Initial REXX INFILE on 23 Mar 2025 at 10:43:15
-------------------------------------------------------------------------
0001 /*REXX program generates all random starting positions for the Chess960 game. */
0002 parse arg seed .                       /*allow for (RANDOM BIF) repeatability.*/
0003 if seed\==''  then call random ,,seed  /*if SEED was specified,  use the seed.*/
0004 x.=0;  #=0;  rg='random generations: ' /*initialize game placeholder; # games.*/
0005 /*▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒*/
0006 do t=1                                 /* [↓]  display every 1,000 generations*/   /*▒*/
0007 if t//1000==0  then say  right(t,9)   rg     #     " unique starting positions."   /*▒*/
0008 @.=.                                   /*define the first rank as being empty.*/   /*▒*/
0009 r1=random(1,6)                         /*generate the first rook:  rank 1.    */   /*▒*/
0010 @.r1='R'                               /*place the  first rook  on  rank1.    */   /*▒*/
0011 do  until  r2\==r1  &  r2\==r1-1  &  r2\==r1+1                           /*▒*/
0012 r2=random(1,8)               /*find placement for the 2nd rook.     */   /*▒*/
0013 end   /*forever*/                                                        /*▒*/
0014 @.r2='r'                               /*place the second rook  on  rank 1.   */   /*▒*/
0015 k=random(min(r1, r2)+1, max(r1, r2)-1) /*find a random position for the king. */   /*▒*/
0016 @.k='K'                                /*place king between the two rooks.    */   /*▒*/
0017 do _=0      ; b1=random(1,8);  if @.b1\==.  then iterate;  c=b1//2       /*▒*/
0018 do forever; b2=random(1,8)       /* c=color of bishop ►──┘        */   /*▒*/
0019 if @.b2\==. | b2==b1 | b2//2==c  then iterate /*is a bad position?*/   /*▒*/
0020 leave _                    /*found position for the 2 clergy*/         /*▒*/
0021 end   /*forever*/          /* [↑]  find a place for the 1st bishop*/   /*▒*/
0022 end     /* _ */              /* [↑]    "  "   "    "   "  2nd    "  */   /*▒*/
0023 @.b1='B'                               /*place the  1st  bishop on  rank 1.   */   /*▒*/
0024 @.b2='b'                               /*  "    "   2nd     "    "    "  "    */   /*▒*/
0025 /*place the two knights on rank 1.     */   /*▒*/
0026 do  until @._='N';  _=random(1,8);   if @._\==.  then iterate; @._='N';   end   /*▒*/
0027 do  until @.!='n';  !=random(1,8);   if @.!\==.  then iterate; @.!='n';   end   /*▒*/
0028 _=                                     /*only the queen is left to be placed. */   /*▒*/
0029 do i=1  for 8;  _=_ || @.i;   end   /*construct the output: first rank only*/   /*▒*/
0030 upper _                                /*uppercase all the chess pieces.      */   /*▒*/
0031 if x._  then iterate                   /*This position found before?  Skip it.*/   /*▒*/
0032 x._=1                                  /*define this position as being found. */   /*▒*/
0033 #=#+1                                  /*bump the # of unique positions found,*/   /*▒*/
0034 if #==960  then leave                                                              /*▒*/
0035 end   /*t ▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒*/
0036 
0037 say # 'unique starting positions found after '   t   "generations."
0038 /*stick a fork in it,  we're all done. */         /**/
-------------------------------------------------------------------------
Cross Reference Table Solid Variable Names
-------------------------------------------------------------------------
001 seed             2
002 x.               4 32
003 rg               4
004 t                6
005 r1               9
006 until            11 26 27
007 r2               12
008 k                15
009 b1               17
010 c                17
011 b2               18
012 i                29
-------------------------------------------------------------------------
Cross Reference Table Bizarre Variable Names
-------------------------------------------------------------------------
001 @.               -> newV1.           8 10 14 16 23 24 26 27
002 #                -> newV2            4 33
003 _                -> newV3            17 26 28 29
004 !                -> newV4            27
