-------------------------------------------------------------------------
Initial REXX INFILE on 23 Mar 2025 at 10:43:08
-------------------------------------------------------------------------
0001 /*REXX program has a list of ten functions, each returns its invocation (index) squared.*/
0002 parse arg seed base $                            /*obtain optional arguments from the CL*/
0003 if datatype(seed, 'W')  then call random ,,seed  /*Not given?  Use random  start seed.  */
0004 if base=='' | base=","  then base=0              /* "    "     Use a zero─based list.   */
0005 if $=''  then $= 8 5 4 9 1 3 2 7 6 0             /* "    "     Use ordered function list*/
0006 /*the $ list must contain 10 functions.*/
0007 say 'the' word("zero one", base+1)'─based list is: '   $       /*show list of functions.*/
0008 /*BASED  must be either   1   or   0.  */
0009 ?='.'random(0, 9)                                /*get a random name of a function.     */
0010 interpret  'CALL'  ?                             /*invoke a randomly selected function. */
0011 say 'function '    ?     " returned "    result  /*display the value of random function.*/
0012 exit                                             /*stick a fork in it,  we're all done. */
0013 /*────────────────────────[Below are the closest things to anonymous functions in REXX].*/
0014 .0: return  .(0)                                 /*function  .0   ─── bump its counter. */
0015 .1: return  .(1)                                 /*    '     .1    "    "   "     "     */
0016 .2: return  .(2)                                 /*    '     .2    "    "   "     "     */
0017 .3: return  .(3)                                 /*    '     .3    "    "   "     "     */
0018 .4: return  .(4)                                 /*    '     .4    "    "   "     "     */
0019 .5: return  .(5)                                 /*    '     .5    "    "   "     "     */
0020 .6: return  .(6)                                 /*    '     .6    "    "   "     "     */
0021 .7: return  .(7)                                 /*    '     .7    "    "   "     "     */
0022 .8: return  .(8)                                 /*    '     .8    "    "   "     "     */
0023 .9: return  .(9)                                 /*    '     .9    "    "   "     "     */
0024 /*──────────────────────────────────────────────────────────────────────────────────────*/
0025 .:  arg #;  _=wordpos(#,$); if _==0  then return 'not in the list.'; return (_-(\base))**2
-------------------------------------------------------------------------
Cross Reference Table Solid Variable Names
-------------------------------------------------------------------------
001 seed             2
002 base             2 4
-------------------------------------------------------------------------
Cross Reference Table Bizarre Variable Names
-------------------------------------------------------------------------
001 $                -> newV1            2 5
002 ?                -> newV2            9
003 _                -> newV3            25
