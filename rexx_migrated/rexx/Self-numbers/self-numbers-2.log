-------------------------------------------------------------------------
Initial REXX INFILE on 23 Mar 2025 at 10:43:28
-------------------------------------------------------------------------
0001 /*REXX pgm displays the  Nth  self number, aka Colombian or Devlali numbers. OEIS A3052.*/
0002 numeric digits 20                                /*ensure enough decimal digits for #.  */
0003 parse arg high .                                 /*obtain optional argument from the CL.*/
0004 if high=='' | high==","  then high= 10000000     /*Not specified?  Then use 10M default.*/
0005 i= 1;   pow= 10;   digs= 1;    offset= 9;   $= 0 /*$:  the last self number found.      */
0006 #= 0                                             /*count of self numbers  (so far).     */
0007 do while #<high;          isSelf= 1         /*assume a self number   (so far).     */
0008 start= max(i-offset, 0)                     /*find start #;  must be non-negative. */
0009 sum= sumDigs(start)                         /*obtain the sum of the decimal digits.*/
0010 
0011 do j=start  to i-1
0012 if j+sum==i  then do;  isSelf= 0         /*found a   non  self number.          */
0013 iterate           /*keep looking for more self numbers.  */
0014 end
0015 if (j+1)//10==0   then sum= sumDigs(j+1) /*obtain the sum of the decimal digits.*/
0016 else sum= sum + 1      /*bump    "   "   "  "     "      "    */
0017 end   /*j*/
0018 
0019 if isSelf  then do;  #= # + 1               /*bump the count of self numbers.      */
0020 $= i                   /*save the last self number found.     */
0021 end
0022 i= i + 1                                    /*bump the self number by unity.       */
0023 if i//pow==0  then do;    digs= digs + 1    /*  "   "  number of decimal digits.   */
0024 pow= pow * 10    /*  "   "  power   " a factor of ten.  */
0025 offset= digs * 9    /*  "   "  offset  " "    "    " nine. */
0026 end
0027 end   /*while*/
0028 say
0029 say 'the '   commas(high)th(high)     " self number is: "     commas($)
0030 exit 0                                           /*stick a fork in it,  we're all done. */
0031 /*──────────────────────────────────────────────────────────────────────────────────────*/
0032 sumDigs: parse arg s 2 x;   do k=1  for length(x)   /*get 1st dig,  & also get the rest.*/
0033 s= s + substr(x, k, 1)  /*add a particular digit to the sum.*/
0034 end  /*k*/;  return s
0035 /*──────────────────────────────────────────────────────────────────────────────────────*/
0036 commas:  parse arg _;  do c=length(_)-3  to 1  by -3; _=insert(',', _, c); end;   return _
0037 th:      parse arg th; return word('th st nd rd', 1 +(th//10)*(th//100%10\==1)*(th//10<4))
-------------------------------------------------------------------------
Cross Reference Table Solid Variable Names
-------------------------------------------------------------------------
001 th               37
-------------------------------------------------------------------------
Cross Reference Table Bizarre Variable Names
-------------------------------------------------------------------------
001 $                -> newV1            5 20
002 #                -> newV2            6 19
003 _                -> newV3            36 36
