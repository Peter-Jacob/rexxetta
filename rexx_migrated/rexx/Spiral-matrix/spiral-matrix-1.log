-------------------------------------------------------------------------
Initial REXX INFILE on 23 Mar 2025 at 10:43:30
-------------------------------------------------------------------------
0001 /*REXX program displays a spiral in a  square array  (of any size)  starting at  START. */
0002 parse arg size start .                           /*obtain optional arguments from the CL*/
0003 if size =='' | size ==","  then size =5          /*Not specified?  Then use the default.*/
0004 if start=='' | start==","  then start=0          /*Not specified?  Then use the default.*/
0005 tot=size**2;           L=length(tot + start)     /*total number of elements in spiral.  */
0006 k=size                                           /*K:   is the counter for the spiral.  */
0007 row=1;       col=0                               /*start spiral at    row 1,  column 0. */
0008 /* [↓]  construct the numbered spiral. */
0009 do n=0  for k;    col=col + 1;   @.col.row=n + start;   end;       if k==0  then exit
0010 /* [↑]  build the first row of spiral. */
0011 do until  n>=tot                                                   /*spiral matrix.*/
0012 do one=1  to -1  by -2  until n>=tot;   k=k-1                   /*perform twice.*/
0013 do n=n  for k;   row=row + one;    @.col.row=n + start;   end /*for the row···*/
0014 do n=n  for k;   col=col - one;    @.col.row=n + start;   end /* "   "  col···*/
0015 end   /*one*/                                                   /* ↑↓ direction.*/
0016 end      /*until n≥tot*/                    /* [↑]   done with the matrix spiral.  */
0017 /* [↓]   display spiral to the screen. */
0018 do      r=1  for size;    _=   right(@.1.r, L) /*construct display   row   by    row. */
0019 do c=2  for size -1; _=_  right(@.c.r, L) /*construct a line  for the display.   */
0020 end   /*col*/                             /* [↑]  line has an extra leading blank*/
0021 say _                                          /*display a line (row) of the spiral.  */
0022 end      /*row*/                               /*stick a fork in it,  we're all done. */
-------------------------------------------------------------------------
Cross Reference Table Solid Variable Names
-------------------------------------------------------------------------
001 size             2 3
002 start            2 4
003 tot              5
004 L                5
005 k                6 12
006 row              7 13
007 col              7 9 14
008 n                9 13 14
009 until            11
010 one              12
011 r                18
012 c                19
-------------------------------------------------------------------------
Cross Reference Table Bizarre Variable Names
-------------------------------------------------------------------------
001 @.               -> newV1.           9 13 14
002 _                -> newV2            18 19
