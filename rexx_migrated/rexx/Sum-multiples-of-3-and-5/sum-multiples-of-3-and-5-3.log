-------------------------------------------------------------------------
Initial REXX INFILE on 23 Mar 2025 at 10:43:32
-------------------------------------------------------------------------
0001 /*REXX program counts all  integers  from  1 ──► N─1   that are multiples of  3  or  5. */
0002 parse arg N t .                                  /*obtain optional arguments from the CL*/
0003 if N=='' | N==","  then N= 1000                  /*Not specified?  Then use the default.*/
0004 if t=='' | t==","  then t=    1                  /* "      "         "   "   "      "   */
0005 numeric digits 1000;    w= 2 + length(t)         /*W: used for formatting 'e' part of Y.*/
0006 say 'The sum of all positive integers that are a multiple of  3  and  5  are:'
0007 say                                              /* [↓]  change the format/look of nE+nn*/
0008 do t;      parse value format(N,2,1,,0) 'E0'  with  m 'E' _ .   /*get the exponent.*/
0009 y= right( (m/1)'e'  ||  (_+0), w)"-1"       /*this fixes a bug in a certain REXX.  */
0010 z= n - 1;        if t==1  then y= z         /*handle a special case of a one─timer.*/
0011 say 'integers from 1 ──►'    y    " is "    sumDiv(z,3) + sumDiv(z,5) - sumDiv(z,3*5)
0012 N= N'0'                                     /*fast *10 multiply for next iteration.*/
0013 end   /*t*/                                 /* [↑]  simply append a zero to the num*/
0014 exit                                             /*stick a fork in it,  we're all done. */
0015 /*──────────────────────────────────────────────────────────────────────────────────────*/
0016 sumDiv: procedure;  parse arg x,d;       $= x % d;              return d * $ * ($+1) % 2
-------------------------------------------------------------------------
Cross Reference Table Solid Variable Names
-------------------------------------------------------------------------
001 x                16
002 d                16
-------------------------------------------------------------------------
Cross Reference Table Bizarre Variable Names
-------------------------------------------------------------------------
001 _                -> newV1            8
002 $                -> newV2            16
