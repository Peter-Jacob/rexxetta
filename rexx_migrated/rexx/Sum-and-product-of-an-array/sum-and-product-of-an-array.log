-------------------------------------------------------------------------
Initial REXX INFILE on 23 Mar 2025 at 10:43:31
-------------------------------------------------------------------------
0001 /*REXX program adds and multiplies   N   elements of a (populated)  array  @. */
0002 numeric digits 200                     /*200 decimal digit #s  (default is 9).*/
0003 parse arg N .;  if N==''  then N=20    /*Not specified?  Then use the default.*/
0004 
0005 do j=1  for N                /*build array of  N  elements (or 20?).*/
0006 @.j=j                        /*set 1st to 1, 3rd to 3, 8th to 8 ··· */
0007 end   /*j*/
0008 sum=0                                  /*initialize  SUM  (variable) to zero. */
0009 prod=1                                 /*initialize  PROD (variable) to unity.*/
0010 do k=1  for N
0011 sum  = sum  + @.k            /*add the element to the running total.*/
0012 prod = prod * @.k            /*multiply element to running product. */
0013 end   /*k*/                  /* [↑]  this pgm:  same as N factorial.*/
0014 
0015 say '     sum of '     m     " elements for the  @  array is: "     sum
0016 say ' product of '     m     " elements for the  @  array is: "     prod
0017 /*stick a fork in it,  we're all done. */
-------------------------------------------------------------------------
Cross Reference Table Solid Variable Names
-------------------------------------------------------------------------
001 N                3 3
002 j                5
003 sum              8 11
004 prod             9 12
005 k                10
-------------------------------------------------------------------------
Cross Reference Table Bizarre Variable Names
-------------------------------------------------------------------------
001 @.               -> newV1.           6
