-------------------------------------------------------------------------
Initial REXX INFILE on 23 Mar 2025 at 10:43:28
-------------------------------------------------------------------------
0001 /*REXX program lists a  sequence of primes  by  testing  primality  by  trial division. */
0002 parse arg n .                                    /*get optional number of primes to find*/
0003 if n=='' | n==","  then n= 26                    /*Not specified?  Then use the default.*/
0004 tell= (n>0);            n= abs(n)                /*Is  N  negative?  Then don't display.*/
0005 @.1=2;     if tell  then say right(@.1, 9)       /*display  2  as a special prime case. */
0006 #=1                                              /*#  is number of primes found (so far)*/
0007 /* [↑]  N:  default lists up to 101 #s.*/
0008 do j=3  by 2  while  #<n                      /*start with the first odd prime.      */
0009 /* [↓]  divide by the primes.   ___    */
0010 do k=2  to #  while  !.k<=j            /*divide  J  with all primes ≤ √ J     */
0011 if j//@.k==0  then iterate j           /*÷ by prev. prime?  ¬prime     ___    */
0012 end   /*j*/                            /* [↑]   only divide up to     √ J     */
0013 #= #+1                                        /*bump the count of number of primes.  */
0014 @.#= j;           !.#= j*j                    /*define this prime; define its square.*/
0015 if tell  then say right(j, 9)                 /*maybe display this prime ──► terminal*/
0016 end   /*j*/                                   /* [↑]  only display N number of primes*/
0017 /* [↓]  display number of primes found.*/
0018 say  #       ' primes found.'                    /*stick a fork in it,  we're all done. */
-------------------------------------------------------------------------
Cross Reference Table Solid Variable Names
-------------------------------------------------------------------------
001 n                2 3 4
002 tell             4
003 j                8
004 k                10
-------------------------------------------------------------------------
Cross Reference Table Bizarre Variable Names
-------------------------------------------------------------------------
001 @.               -> newV1.           5 14
002 !.               -> newV2.           14
003 #                -> newV3            6 13
