-------------------------------------------------------------------------
Initial REXX INFILE on 23 Mar 2025 at 10:43:36
-------------------------------------------------------------------------
0001 /*REXX program thins a  NxM  character grid  using  the  Zhang-Suen thinning  algorithm.*/
0002 parse arg iFID .;  if iFID==''  then iFID='ZHANG_SUEN.DAT'
0003 white=' ';         @.=white                      /* [↓]  read the input character grid. */
0004 do row=1  while lines(iFID)\==0;  _=linein(iFID)
0005 _=translate(_,,.0);               cols.row=length(_)
0006 do col=1  for cols.row;  @.row.col=substr(_,col,1)
0007 end   /*col*/                     /* [↑]  assign whole row of characters.*/
0008 end       /*row*/
0009 rows=row-1                                       /*adjust ROWS because of the  DO loop. */
0010 call show@ 'input file ' iFID  " contents:"      /*display show the input character grid*/
0011 
0012 do  until  changed==0;    changed=0            /*keep slimming until we're finished.  */
0013 do step=1  for 2                          /*keep track of  step one  or step two.*/
0014 do     r=1  for rows                    /*process all the  rows  and  columns. */
0015 do c=1  for cols.r;  !.r.c=@.r.c    /*assign an alternate grid.            */
0016 if r==1|r==rows|c==1|c==cols.r  then iterate             /*is this an edge?*/
0017 if @.r.c==white  then iterate       /*Is the character white?  Then skip it*/
0018 call Ps; b=b()                      /*define   Ps   and also   "b".        */
0019 if b<2 | b>6     then iterate       /*is   B   within the range ?          */
0020 if a()\==1       then iterate       /*count the number of transitions.     */    /*  ╔══╦══╦══╗  */
0021 if step==1       then if (p2 & p4 & p6)  |  p4 & p6 & p8  then iterate           /*  ║p9║p2║p3║  */
0022 if step==2       then if (p2 & p4 & p8)  |  p2 & p6 & p8  then iterate           /*  ╠══╬══╬══╣  */
0023 !.r.c=white                         /*set a grid character to  white.      */    /*  ║p8║p1║p4║  */
0024 changed=1                           /*indicate a character was changed.    */    /*  ╠══╬══╬══╣  */
0025 end   /*c*/                                                                      /*  ║p7║p6║p5║  */
0026 end       /*r*/                                                                      /*  ╚══╩══╩══╝  */
0027 call copy!                                /*copy the alternate to working grid.  */
0028 end         /*step*/
0029 end              /*until changed==0*/
0030 
0031 call show@  'slimmed output:'                    /*display the slimmed character grid.  */
0032 exit                                             /*stick a fork in it,  we're all done. */
0033 /*─────────────────────────────────────────────────────────────────────────────────────────────────────────────*/
0034 a: return (\p2==p3&p3)+(\p3==p4&p4)+(\p4==p5&p5)+(\p5==p6&p6)+(\p6==p7&p7)+(\p7==p8&p8)+(\p8==p9&p9)+(\p9==p2&p2)
0035 b: return p2 + p3 + p4 + p5 + p6 + p7 + p8 + p9
0036 copy!:                        do r=1  for rows;       do c=1  for cols.r;        @.r.c=!.r.c;  end;  end;  return
0037 show@: say; say arg(1); say;  do r=1  for rows; _=;   do c=1  for cols.r; _=_ || @.r.c; end;  say _; end;  return
0038 /*──────────────────────────────────────────────────────────────────────────────────────*/
0039 Ps:  rm=r-1;  rp=r+1;  cm=c-1;  cp=c+1                       /*calculate some shortcuts.*/
0040 p2=@.rm.c\==white; p3=@.rm.cp\==white; p4=@.r.cp\==white; p5=@.rp.cp\==white
0041 p6=@.rp.c\==white; p7=@.rp.cm\==white; p8=@.r.cm\==white; p9=@.rm.cm\==white; return
-------------------------------------------------------------------------
Cross Reference Table Solid Variable Names
-------------------------------------------------------------------------
001 white            3
002 row              4
003 cols.            5
004 col              6
005 rows             9
006 until            12
007 changed          12 24
008 step             13
009 r                14 37
010 c                15 36 37
011 b                18
012 rp               39
013 cm               39
014 cp               39
015 p2               40
016 p3               40
017 p4               40
018 p5               40
019 p6               41
020 p7               41
021 p8               41
022 p9               41
-------------------------------------------------------------------------
Cross Reference Table Bizarre Variable Names
-------------------------------------------------------------------------
001 @.               -> newV1.           3 6 36
002 !.               -> newV2.           15 23
003 _                -> newV3            4 5 37 37
