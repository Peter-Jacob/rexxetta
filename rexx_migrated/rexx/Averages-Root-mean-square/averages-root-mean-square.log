-------------------------------------------------------------------------
Initial REXX INFILE on 23 Mar 2025 at 10:43:06
-------------------------------------------------------------------------
0001 /*REXX program computes and displays the  root mean square (RMS)  of a number sequence. */
0002 parse arg nums digs show .                       /*obtain the optional arguments from CL*/
0003 if nums==''  |  nums==","  then nums=10          /*Not specified?  Then use the default.*/
0004 if digs==''  |  digs==","  then digs=50          /* "      "         "   "   "     "    */
0005 if show==''  |  show==","  then show=10          /* "      "         "   "   "     "    */
0006 numeric digits digs                              /*uses  DIGS  decimal digits for calc. */
0007 $=0;                     do j=1  for nums        /*process each of the   N   integers.  */
0008 $=$ + j**2              /*sum the   squares   of the integers. */
0009 end   /*j*/
0010 /* [↓]  displays  SHOW  decimal digits.*/
0011 rms=format( sqrt($/nums), , show ) / 1           /*divide by N, then calculate the SQRT.*/
0012 say 'root mean square for 1──►'nums  "is: "  rms /*display the  root mean square (RMS). */
0013 exit                                             /*stick a fork in it,  we're all done. */
0014 /*──────────────────────────────────────────────────────────────────────────────────────*/
0015 sqrt:  procedure; parse arg x;  if x=0  then return 0;  d=digits();  numeric digits;  m.=9
0016 numeric form;  parse value format(x,2,1,,0) 'E0'  with  g 'E' _ .;  g=g *.5'e'_ % 2
0017 h=d+6;    do j=0  while h>9;       m.j=h;                h=h%2+1;        end  /*j*/
0018 do k=j+5  to 0  by -1;   numeric digits m.k;   g=(g+x/g)*.5;   end  /*k*/
0019 return g
-------------------------------------------------------------------------
Cross Reference Table Solid Variable Names
-------------------------------------------------------------------------
001 x                15
002 d                15
003 m.               15 17
004 j                7 17
005 rms              11
006 NORMAL.6         
007 NORMAL.7         
008 NORMAL.8         
009 NORMAL.9         
010 NORMAL.10        
011 NORMAL.11        
012 NORMAL.12        
013 NORMAL.13        
014 NORMAL.14        
015 NORMAL.15        
016 NORMAL.16        
017 NORMAL.17        
018 NORMAL.18        
019 NORMAL.19        
020 NORMAL.20        
021 NORMAL.21        
022 NORMAL.22        
023 g                16 16 18
024 h                17 17
025 k                18
-------------------------------------------------------------------------
Cross Reference Table Bizarre Variable Names
-------------------------------------------------------------------------
001 $                -> newV1            7 8
002 _                -> newV2            16
