-------------------------------------------------------------------------
Initial REXX INFILE on 23 Mar 2025 at 10:43:07
-------------------------------------------------------------------------
0001 /*REXX PROGRAM TO SHOW ANY YEAR'S (MONTHLY) CALENDAR (WITH/WITHOUT GRID)*/
0002 @ABC=
0003 PARSE VALUE SCRSIZE()  WITH  SD  SW .
0004 DO J=0 TO 255;_=D2C(J);IF DATATYPE(_,'L') THEN @ABC=@ABC||_;END
0005 @ABCU=@ABC; UPPER @ABCU
0006 DAYS_='SUNDAY MONDAY TUESDAY WEDNESDAY THURSDAY FRIDAY SATURDAY'
0007 MONTHS_='JANUARY FEBRUARY MARCH APRIL MAY JUNE JULY AUGUST SEPTEMBER OCTOBER NOVEMBER DECEMBER'
0008 DAYS=; MONTHS=
0009 DO J=1 FOR 7
0010 _=LOWER(WORD(DAYS_,J))
0011 DAYS=DAYS TRANSLATE(LEFT(_,1))SUBSTR(_,2)
0012 END
0013 DO J=1 FOR 12
0014 _=LOWER(WORD(MONTHS_,J))
0015 MONTHS=MONTHS TRANSLATE(LEFT(_,1))SUBSTR(_,2)
0016 END
0017 CALFILL=' '; MC=12; _='1 3 1234567890' "FB"X
0018 PARSE VAR _ GRID CALSPACES # CHK . CV_ DAYS.1 DAYS.2 DAYS.3 DAYSN
0019 _=0; PARSE VAR _ COLS 1 JD 1 LOWERCASE 1 MAXKALPUTS 1 NARROW 1,
0020 NARROWER 1 NARROWEST 1 SHORT 1 SHORTER 1 SHORTEST 1,
0021 SMALL 1 SMALLER 1 SMALLEST 1 UPPERCASE
0022 PARSE ARG MM '/' DD "/" YYYY _ '(' OPS;  UOPS=OPS
0023 IF _\=='' | \IS#(MM) | \IS#(DD) | \IS#(YYYY) THEN CALL ERX 86
0024 
0025 @CALMONTHS ='CALMON'   || LOWER('THS')
0026 @CALSPACES ='CALSP'    || LOWER('ACES')
0027 @DEPTH     ='DEP'      || LOWER('TH')
0028 @GRIDS     ='GRID'     || LOWER('S')
0029 @LOWERCASE ='LOW'      || LOWER('ERCASE')
0030 @NARROW    ='NAR'      || LOWER('ROW')
0031 @NARROWER  ='NARROWER'
0032 @NARROWEST ='NARROWES' || LOWER('T')
0033 @SHORT     ='SHOR'     || LOWER('T')
0034 @SHORTER   ='SHORTER'
0035 @SHORTEST  ='SHORTES'  || LOWER('T')
0036 @UPPERCASE ='UPP'      || LOWER('ERCASE')
0037 @WIDTH     ='WID'      || LOWER('TH')
0038 DO WHILE OPS\==''; OPS=STRIP(OPS,'L'); PARSE VAR OPS _1 2 1 _ . 1 _O OPS
0039 UPPER _
0040 SELECT
0041 WHEN  ABB(@CALMONTHS)  THEN        MC=NAI()
0042 WHEN  ABB(@CALSPACES)  THEN CALSPACES=NAI()
0043 WHEN  ABB(@DEPTH)      THEN        SD=NAI()
0044 WHEN ABBN(@GRIDS)      THEN      GRID=NO()
0045 WHEN ABBN(@LOWERCASE)  THEN LOWERCASE=NO()
0046 WHEN ABBN(@NARROW)     THEN    NARROW=NO()
0047 WHEN ABBN(@NARROWER)   THEN  NARROWER=NO()
0048 WHEN ABBN(@NARROWEST)  THEN NARROWEST=NO()
0049 WHEN ABBN(@SHORT)      THEN     SHORT=NO()
0050 WHEN ABBN(@SHORTER)    THEN   SHORTER=NO()
0051 WHEN ABBN(@SHORTEST)   THEN  SHORTEST=NO()
0052 WHEN ABBN(@SMALL)      THEN     SMALL=NO()
0053 WHEN ABBN(@SMALLER)    THEN   SMALLER=NO()
0054 WHEN ABBN(@SMALLEST)   THEN  SMALLEST=NO()
0055 WHEN ABBN(@UPPERCASE)  THEN UPPERCASE=NO()
0056 WHEN  ABB(@WIDTH)      THEN        SW=NAI()
0057 OTHERWISE NOP
0058 END    /*SELECT*/
0059 END         /*DO WHILE OPTS\== ...*/
0060 
0061 IF SD==0  THEN SD= 43;  SD= SD-3
0062 IF SW==0  THEN SW= 80;  SW= SW-1
0063 MC=INT(MC,'MONTHSCALENDER'); IF MC>0 THEN CAL=1
0064 DAYS=' 'DAYS;  MONTHS=' 'MONTHS
0065 CYYYY=RIGHT(DATE(),4);  HYY=LEFT(CYYYY,2);  LYY=RIGHT(CYYYY,2)
0066 DY.=31; _=30; PARSE VAR _ DY.4 1 DY.6 1 DY.9 1 DY.11; DY.2=28+LY(YYYY)
0067 YY=RIGHT(YYYY,2);  CW=10;  CINDENT=1;  CALWIDTH=76
0068 IF SMALL    THEN DO; NARROW=1   ; SHORT=1   ; END
0069 IF SMALLER  THEN DO; NARROWER=1 ; SHORTER=1 ; END
0070 IF SMALLEST THEN DO; NARROWEST=1; SHORTEST=1; END
0071 IF SHORTEST THEN SHORTER=1
0072 IF SHORTER  THEN SHORT  =1
0073 IF NARROW    THEN DO; CW=9; CINDENT=3; CALWIDTH=69; END
0074 IF NARROWER  THEN DO; CW=4; CINDENT=1; CALWIDTH=34; END
0075 IF NARROWEST THEN DO; CW=2; CINDENT=1; CALWIDTH=20; END
0076 CV_=CALWIDTH+CALSPACES+2
0077 CALFILL=LEFT(COPIES(CALFILL,CW),CW)
0078 DO J=1 FOR 7;         _=WORD(DAYS,J)
0079 DO JW=1 FOR 3;  _D=STRIP(SUBSTR(_,CW*JW-CW+1,CW))
0080 IF JW=1 THEN _D=CENTRE(_D,CW+1)
0081 ELSE _D=LEFT(_D,CW+1)
0082 DAYS.JW=DAYS.JW||_D
0083 END   /*JW*/
0084 __=DAYSN
0085 IF NARROWER  THEN DAYSN=__||CENTRE(LEFT(_,3),5)
0086 IF NARROWEST THEN DAYSN=__||CENTER(LEFT(_,2),3)
0087 END   /*J*/
0088 _YYYY=YYYY; CALPUTS=0; CV=1; _MM=MM+0; MONTH=WORD(MONTHS,MM)
0089 DY.2=28+LY(_YYYY); DIM=DY._MM; _DD=01; DOW=DOW(_MM,_DD,_YYYY); $DD=DD+0
0090 
0091 /*─────────────────────────────NOW: THE BUSINESS OF THE BUILDING THE CAL*/
0092 CALL CALGEN
0093 DO _J=2 TO MC
0094 IF CV_\=='' THEN DO
0095 CV=CV+CV_
0096 IF CV+CV_>=SW THEN DO; CV=1; CALL CALPUT
0097 CALL FCALPUTS;CALL CALPB
0098 END
0099 ELSE CALPUTS=0
0100 END
0101 ELSE DO;CALL CALPB;CALL CALPUT;CALL FCALPUTS;END
0102 _MM=_MM+1;  IF _MM==13 THEN DO;  _MM=1; _YYYY=_YYYY+1;  END
0103 MONTH=WORD(MONTHS,_MM); DY.2=28+LY(_YYYY); DIM=DY._MM
0104 DOW=DOW(_MM,_DD,_YYYY); $DD=0; CALL CALGEN
0105 END   /*_J*/
0106 CALL FCALPUTS
0107 RETURN _
0108 
0109 /*─────────────────────────────CALGEN SUBROUTINE────────────────────────*/
0110 CALGEN: CELLX=;CELLJ=;CELLM=;CALCELLS=0;CALLINE=0
0111 CALL CALPUT
0112 CALL CALPUTL COPIES('─',CALWIDTH),"┌┐"; CALL CALHD
0113 CALL CALPUTL MONTH ' ' _YYYY          ; CALL CALHD
0114 IF NARROWEST | NARROWER THEN CALL CALPUTL DAYSN
0115 ELSE DO JW=1 FOR 3
0116 IF SPACE(DAYS.JW)\=='' THEN CALL CALPUTL DAYS.JW
0117 END
0118 CALFT=1; CALFB=0
0119 DO JF=1 FOR DOW-1; CALL CELLDRAW CALFILL,CALFILL; END
0120 DO JY=1 FOR DIM; CALL CELLDRAW JY; END
0121 CALFB=1
0122 DO 7; CALL CELLDRAW CALFILL,CALFILL; END
0123 IF SD>32 & \SHORTER THEN CALL CALPUT
0124 RETURN
0125 
0126 /*─────────────────────────────CELLDRAW SUBROUTINE──────────────────────*/
0127 CELLDRAW: PARSE ARG ZZ,CDDOY;ZZ=RIGHT(ZZ,2);CALCELLS=CALCELLS+1
0128 IF CALCELLS>7 THEN DO
0129 CALLINE=CALLINE+1
0130 CELLX=SUBSTR(CELLX,2)
0131 CELLJ=SUBSTR(CELLJ,2)
0132 CELLM=SUBSTR(CELLM,2)
0133 CELLB=TRANSLATE(CELLX,,")(─-"#)
0134 IF CALLINE==1 THEN CALL CX
0135 CALL CALCSM; CALL CALPUTL CELLX; CALL CALCSJ; CALL CX
0136 CELLX=; CELLJ=; CELLM=; CALCELLS=1
0137 END
0138 CDDOY=RIGHT(CDDOY,CW); CELLM=CELLM'│'CENTER('',CW)
0139 CELLX=CELLX'│'CENTRE(ZZ,CW); CELLJ=CELLJ'│'CENTER('',CW)
0140 RETURN
0141 
0142 /*═════════════════════════════GENERAL 1-LINE SUBS══════════════════════*/
0143 ABB:ARG ABBU;PARSE ARG ABB;RETURN ABBREV(ABBU,_,ABBL(ABB))
0144 ABBL:RETURN VERIFY(ARG(1)LEFT(@ABC,1),@ABC,'M')-1
0145 ABBN:PARSE ARG ABBN;RETURN ABB(ABBN)|ABB('NO'ABBN)
0146 CALCSJ:IF SD>49&\SHORTER THEN CALL CALPUTL CELLB;IF SD>24&\SHORT THEN CALL CALPUTL CELLJ; RETURN
0147 CALCSM:IF SD>24&\SHORT THEN CALL CALPUTL CELLM;IF SD>49&\SHORTER THEN CALL CALPUTL CELLB;RETURN
0148 CALHD:IF SD>24&\SHORTER THEN CALL CALPUTL;IF SD>32&\SHORTEST THEN CALL CALPUTL;RETURN
0149 CALPB:IF \GRID&SHORTEST THEN CALL PUT CHK;RETURN
0150 CALPUT:CALPUTS=CALPUTS+1;MAXKALPUTS=MAX(MAXKALPUTS,CALPUTS);IF SYMBOL('CT.'CALPUTS)\=='VAR' THEN CT.CALPUTS=;CT.CALPUTS=OVERLAY(ARG(1),CT.CALPUTS,CV);RETURN
0151 CALPUTL:CALL CALPUT COPIES(' ',CINDENT)LEFT(ARG(2)"│",1)CENTER(ARG(1),CALWIDTH)||RIGHT('│'ARG(2),1);RETURN
0152 CX:CX_='├┤';CX=COPIES(COPIES('─',CW)'┼',7);IF CALFT THEN DO;CX=TRANSLATE(CX,'┬',"┼");CALFT=0;END;IF CALFB THEN DO;CX=TRANSLATE(CX,'┴',"┼");CX_='└┘';CALFB=0;END;CALL CALPUTL CX,CX_;RETURN
0153 DOW:PROCEDURE;ARG M,D,Y;IF M<3 THEN DO;M=M+12;Y=Y-1;END;YL=LEFT(Y,2);YR=RIGHT(Y,2);W=(D+(M+1)*26%10+YR+YR%4+YL%4+5*YL)//7;IF W==0 THEN W=7;RETURN W
0154 ER:PARSE ARG _1,_2;CALL '$ERR' "14"P(_1) P(WORD(_1,2) !FID(1)) _2;IF _1<0 THEN RETURN _1;EXIT RESULT
0155 ERR:CALL ER '-'ARG(1),ARG(2);RETURN ''
0156 ERX:CALL ER '-'ARG(1),ARG(2);EXIT ''
0157 FCALPUTS: DO J=1 FOR MAXKALPUTS;CALL PUT CT.J;END;CT.=;MAXKALPUTS=0;CALPUTS=0;RETURN
0158 INT:INT=NUMX(ARG(1),ARG(2));IF \ISINT(INT) THEN CALL ERX 92,ARG(1) ARG(2);RETURN INT/1
0159 IS#:RETURN VERIFY(ARG(1),#)==0
0160 ISINT:RETURN DATATYPE(ARG(1),'W')
0161 LOWER:RETURN TRANSLATE(ARG(1),@ABC,@ABCU)
0162 LY:ARG _;IF LENGTH(_)==2 THEN _=HYY||_;LY=_//4==0;IF LY==0 THEN RETURN 0;LY=((_//100\==0)|_//400==0);RETURN LY
0163 NA:IF ARG(1)\=='' THEN CALL ERX 01,ARG(2);PARSE VAR OPS NA OPS;IF NA=='' THEN CALL ERX 35,_O;RETURN NA
0164 NAI:RETURN INT(NA(),_O)
0165 NAN:RETURN NUMX(NA(),_O)
0166 NO:IF ARG(1)\=='' THEN CALL ERX 01,ARG(2);RETURN LEFT(_,2)\=='NO'
0167 NUM:PROCEDURE;PARSE ARG X .,F,Q;IF X=='' THEN RETURN X;IF DATATYPE(X,'N') THEN RETURN X/1;X=SPACE(TRANSLATE(X,,','),0);IF DATATYPE(X,'N') THEN RETURN X/1;RETURN NUMNOT()
0168 NUMNOT:IF Q==1 THEN RETURN X;IF Q=='' THEN CALL ER 53,X F;CALL ERX 53,X F
0169 NUMX:RETURN NUM(ARG(1),ARG(2),1)
0170 P:RETURN WORD(ARG(1),1)
0171 PUT:_=ARG(1);_=TRANSLATE(_,,'_'CHK);IF \GRID THEN _=UNGRID(_);IF LOWERCASE THEN _=LOWER(_);IF UPPERCASE THEN UPPER _;IF SHORTEST&_=' ' THEN RETURN;CALL TELL _;RETURN
0172 TELL:SAY ARG(1);RETURN
0173 UNGRID:RETURN TRANSLATE(ARG(1),,"│║─═┤┐└┴┬├┼┘┌╔╗╚╝╟╢╞╡╫╪╤╧╥╨╠╣")
-------------------------------------------------------------------------
Cross Reference Table Solid Variable Names
-------------------------------------------------------------------------
001 X                167 167
002 F                167
003 Q                167
004 PUT:_            171
-------------------------------------------------------------------------
Cross Reference Table Bizarre Variable Names
-------------------------------------------------------------------------
001 @CALMONTHS       -> newV1            25
002 @CALSPACES       -> newV2            26
003 @LOWERCASE       -> newV3            29
004 @NARROWEST       -> newV4            32
005 @UPPERCASE       -> newV5            36
006 @NARROWER        -> newV6            31
007 @SHORTEST        -> newV7            35
008 @SHORTER         -> newV8            34
009 @NARROW          -> newV9            30
010 @DEPTH           -> newV10           27
011 @GRIDS           -> newV11           28
012 @SHORT           -> newV12           33
013 @WIDTH           -> newV13           37
014 @ABCU            -> newV14           5
015 _YYYY            -> newV15           88 102
016 @ABC             -> newV16           2 4
017 _MM              -> newV17           88 102 102
018 _DD              -> newV18           89
019 $DD              -> newV19           89 104
020 _1               -> newV20           38 154
021 _O               -> newV21           38
022 _D               -> newV22           79 80
023 __               -> newV23           84
024 _J               -> newV24           93
025 _2               -> newV25           154
026 _                -> newV26           4 10 14 17 18 19 19 22 38 66 66 78 162 171 171 171
027 #                -> newV27           18
