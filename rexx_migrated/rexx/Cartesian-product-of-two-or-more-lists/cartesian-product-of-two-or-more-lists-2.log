-------------------------------------------------------------------------
Initial REXX INFILE on 23 Mar 2025 at 10:43:07
-------------------------------------------------------------------------
0001 /* REXX computes the Cartesian Product of up to 4 sets */
0002 Call cart '{1, 2} x {3, 4}'
0003 Call cart '{3, 4} x {1, 2}'
0004 Call cart '{1, 2} x {}'
0005 Call cart '{} x {1, 2}'
0006 Call cart '{1776, 1789} x {7, 12} x {4, 14, 23} x {0, 1}'
0007 Call cart '{1, 2, 3} x {30} x {500, 100}'
0008 Call cart '{1, 2, 3} x {} x {500, 100}'
0009 Exit
0010 
0011 cart:
0012 Parse Arg sl
0013 Say sl
0014 Do i=1 By 1 while pos('{',sl)>0
0015 Parse Var sl '{' list '}' sl
0016 Do j=1 By 1 While list<>''
0017 Parse Var list e.i.j . ',' list
0018 End
0019 n.i=j-1
0020 If n.i=0 Then Do /* an empty set */
0021 Say '{}'
0022 Say ''
0023 Return
0024 End
0025 End
0026 n=i-1
0027 ct2.=0
0028 Do i=1 To n.1
0029 Do j=1 To n.2
0030 z=ct2.0+1
0031 ct2.z=e.1.i e.2.j
0032 ct2.0=z
0033 End
0034 End
0035 If n<3 Then
0036 Return output(2)
0037 ct3.=0
0038 Do i=1 To ct2.0
0039 Do k=1 To n.3
0040 z=ct3.0+1
0041 ct3.z=ct2.i e.3.k
0042 ct3.0=z
0043 End
0044 End
0045 If n<4 Then
0046 Return output(3)
0047 ct4.=0
0048 Do i=1 To ct3.0
0049 Do l=1 To n.4
0050 z=ct4.0+1
0051 ct4.z=ct3.i e.4.l
0052 ct4.0=z
0053 End
0054 End
0055 Return output(4)
0056 
0057 output:
0058 Parse Arg u
0059 Do v=1 To value('ct'u'.0')
0060 res='{'translate(value('ct'u'.'v),',',' ')'}'
0061 Say res
0062 End
0063 Say ' '
0064 Return 0
-------------------------------------------------------------------------
Cross Reference Table Solid Variable Names
-------------------------------------------------------------------------
001 u                58
002 v                59
003 res              60
-------------------------------------------------------------------------
Cross Reference Table Bizarre Variable Names
-------------------------------------------------------------------------
