-------------------------------------------------------------------------
Initial REXX INFILE on 23 Mar 2025 at 10:43:11
-------------------------------------------------------------------------
0001 /*REXX program  converts  a   mm/dd/yyyy    Gregorian date   ───►   a  Discordian date. */
0002 @day.1= 'Sweetness'                             /*define the 1st day─of─Discordian─week*/
0003 @day.2= 'Boomtime'                              /*   "    "  2nd  "   "      "       " */
0004 @day.3= 'Pungenday'                             /*   "    "  3rd  "   "      "       " */
0005 @day.4= 'Prickle-Prickle'                       /*   "    "  4th  "   "      "       " */
0006 @day.5= 'Setting Orange'                        /*   "    "  5th  "   "      "       " */
0007 
0008 @seas.0= "St. Tib's day,"                        /*define the leap─day of Discordian yr.*/
0009 @seas.1= 'Chaos'                                 /*   "   1st season─of─Discordian─year.*/
0010 @seas.2= 'Discord'                               /*   "   2nd    "    "      "       "  */
0011 @seas.3= 'Confusion'                             /*   "   3rd    "    "      "       "  */
0012 @seas.4= 'Bureaucracy'                           /*   "   4th    "    "      "       "  */
0013 @seas.5= 'The Aftermath'                         /*   "   5th    "    "      "       "  */
0014 
0015 parse arg  gM  '/'  gD  "/"  gY .                /*obtain the specified Gregorian date. */
0016 if gM=='' | gM=="," | gM=='*'  then parse value  date("U")   with   gM  '/'  gD  "/"  gY .
0017 
0018 gY=left( right( date(), 4), 4 - length(Gy) )gY   /*adjust for two─digit year or no year.*/
0019 
0020 /* [↓]  day─of─year,  leapyear adjust. */
0021 doy= date('d', gY || right(gM, 2, 0)right(gD ,2, 0),  "s")   -   (leapyear(gY)   &   gM>2)
0022 
0023 dW= doy//5;                if dW==0  then dW=  5 /*compute the Discordian weekday.      */
0024 dS= (doy-1) % 73  +  1                           /*   "     "       "     season.       */
0025 dD= doy//73;               if dD==0  then dD= 73 /*   "     "       "     day─of─month. */
0026 if leapyear(gY)  &  gM==2  &  gD==29 then ds=  0 /*is this St. Tib's day  (leapday) ?   */
0027 if ds==0  then dD=                               /*adjust for the Discordian leap day.  */
0028 
0029 say space(@day.dW','  @seas.dS dD","  gY + 1166) /*display Discordian date to terminal. */
0030 exit                                             /*stick a fork in it,  we're all done. */
0031 /*──────────────────────────────────────────────────────────────────────────────────────*/
0032 leapyear: procedure;   parse arg y               /*obtain a four─digit Gregorian year.  */
0033 if y//4  \==  0  then return 0         /*Not  ÷  by 4?   Then not a leapyear. */
0034 return y//100 \== 0  |  y//400 == 0    /*apply the  100  and  400  year rules.*/
-------------------------------------------------------------------------
Cross Reference Table Solid Variable Names
-------------------------------------------------------------------------
001 y                32
-------------------------------------------------------------------------
Cross Reference Table Bizarre Variable Names
-------------------------------------------------------------------------
001 @seas.           -> newV1.           8 9 10 11 12 13
002 @day.            -> newV2.           2 3 4 5 6
