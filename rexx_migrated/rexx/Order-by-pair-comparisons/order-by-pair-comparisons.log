-------------------------------------------------------------------------
Initial REXX INFILE on 23 Mar 2025 at 10:43:23
-------------------------------------------------------------------------
0001 /*REXX pgm orders some items based on (correct) answers from a  carbon─based life form. */
0002 colors= 'violet red green indigo blue yellow orange'
0003 q= 0;    #= 0;    $=
0004 do j=1  for words(colors);   q= inSort( word(colors, j), q)
0005 end   /*j*/                           /*poise questions the CBLF about order.*/
0006 say
0007 do i=1  for #;   say '   query'   right(i, length(#) )":"   !.i
0008 end   /*i*/                           /* [↑] show the list of queries to CBLF*/
0009 say
0010 say 'final ordering: '    $
0011 exit 0
0012 /*──────────────────────────────────────────────────────────────────────────────────────*/
0013 getAns: #= # + 1;    _= copies('─', 8);     y_n= '     Answer  y/n'
0014 do try=0  until ansU='Y'  |  ansU='N'
0015 if try>0  then say _ '(***error***)  incorrect answer.'
0016 ask= _  ' is '   center(x,6)   " less than "   center(word($, mid+1),6)  '?'
0017 say ask   y_n;  parse pull ans 1 ansU;   ansU= space(ans);   upper ansU
0018 end   /*until*/;      !.#= ask   '  '    ans;                return
0019 /*──────────────────────────────────────────────────────────────────────────────────────*/
0020 inSort: parse arg x, q;          hi= words($);          lo= 0
0021 do q=q-1  while lo<hi;              mid= (lo+hi) % 2
0022 call getAns;  if ansU=='Y'  then hi= mid
0023 else lo= mid + 1
0024 end   /*q*/
0025 $= subword($, 1, lo)  x  subword($, lo+1);      return q
-------------------------------------------------------------------------
Cross Reference Table Solid Variable Names
-------------------------------------------------------------------------
001 x                20
002 q                20 21
003 hi               20 22
004 lo               20
005 mid              21
-------------------------------------------------------------------------
Cross Reference Table Bizarre Variable Names
-------------------------------------------------------------------------
001 !.               -> newV1.           18
002 #                -> newV2            3
003 $                -> newV3            3 25
004 _                -> newV4            13
