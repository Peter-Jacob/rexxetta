-------------------------------------------------------------------------
Initial REXX INFILE on 23 Mar 2025 at 10:43:28
-------------------------------------------------------------------------
0001 /*REXX program generates primes via sieve of Eratosthenes algorithm.
0002 * 21.07.2012 Walter Pachl derived from above Rexx version
0003 *                       avoid symbols @ and # (not supported by ooRexx)
0004 *                       avoid negations (think positive)
0005 **********************************************************************/
0006 highest=200                       /*define highest number to use.  */
0007 is_prime.=1                       /*assume all numbers are prime.  */
0008 w=length(highest)                 /*width of the biggest number,   */
0009 /*  it's used for aligned output.*/
0010 Do j=3 To highest By 2,           /*strike multiples of odd ints.  */
0011 While j*j<=highest   /* up to sqrt(highest)           */
0012 If is_prime.j Then Do
0013 Do jm=j*3 To highest By j+j /*start with next odd mult. of J */
0014 is_prime.jm=0             /*mark odd mult. of J not prime. */
0015 End
0016 End
0017 End
0018 np=0                              /*number of primes shown         */
0019 Call tell 2
0020 Do n=3 To highest By 2            /*list all the primes found.     */
0021 If is_prime.n Then Do
0022 Call tell n
0023 End
0024 End
0025 Exit
0026 tell: Parse Arg prime
0027 np=np+1
0028 Say '           prime number' right(np,w) " --> " right(prime,w)
0029 Return
-------------------------------------------------------------------------
Cross Reference Table Solid Variable Names
-------------------------------------------------------------------------
001 prime            26
002 np               27
-------------------------------------------------------------------------
Cross Reference Table Bizarre Variable Names
-------------------------------------------------------------------------
