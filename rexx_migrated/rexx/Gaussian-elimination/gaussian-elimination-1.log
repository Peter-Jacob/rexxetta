-------------------------------------------------------------------------
Initial REXX INFILE on 23 Mar 2025 at 10:43:15
-------------------------------------------------------------------------
0001 /* REXX ---------------------------------------------------------------
0002 * 07.08.2014 Walter Pachl translated from PL/I)
0003 * improved to get integer results for, e.g. this input:
0004 -6 -18  13   6  -6 -15  -2  -9    -231
0005 2  20   9   2  16 -12 -18  -5     647
0006 23  18 -14 -14  -1  16  25 -17    -907
0007 -8  -1 -19   4   3 -14  23   8     248
0008 25  20  -6  15   0 -10   9  17    1316
0009 -13  -1   3   5  -2  17  14 -12   -1080
0010 19  24 -21  -5 -19   0 -24 -17    1006
0011 20  -3 -14 -16 -23 -25 -15  20    1496
0012 *--------------------------------------------------------------------*/
0013 Numeric Digits 20
0014 Parse Arg t
0015 n=3
0016 Parse Value '1  2  3 14' With a.1.1 a.1.2 a.1.3 b.1
0017 Parse Value '2  1  3 13' With a.2.1 a.2.2 a.2.3 b.2
0018 Parse Value '3 -2 -1 -4' With a.3.1 a.3.2 a.3.3 b.3
0019 If t=6 Then Do
0020 n=6
0021 Parse Value '1.00 0.00 0.00  0.00  0.00 0.00  ' With a.1.1 a.1.2 a.1.3 a.1.4 a.1.5 a.1.6 .
0022 Parse Value '1.00 0.63 0.39  0.25  0.16 0.10  ' With a.2.1 a.2.2 a.2.3 a.2.4 a.2.5 a.2.6 .
0023 Parse Value '1.00 1.26 1.58  1.98  2.49 3.13  ' With a.3.1 a.3.2 a.3.3 a.3.4 a.3.5 a.3.6 .
0024 Parse Value '1.00 1.88 3.55  6.70 12.62 23.80 ' With a.4.1 a.4.2 a.4.3 a.4.4 a.4.5 a.4.6 .
0025 Parse Value '1.00 2.51 6.32 15.88 39.90 100.28' With a.5.1 a.5.2 a.5.3 a.5.4 a.5.5 a.5.6 .
0026 Parse Value '1.00 3.14 9.87 31.01 97.41 306.02' With a.6.1 a.6.2 a.6.3 a.6.4 a.6.5 a.6.6 .
0027 Parse Value '-0.01 0.61 0.91 0.99 0.60 0.02'    With b.1 b.2 b.3 b.4 b.5 b.6 .
0028 End
0029 Do i=1 To n
0030 Do j=1 To n
0031 sa.i.j=a.i.j
0032 End
0033 sb.i=b.i
0034 End
0035 Say 'The equations are:'
0036 do i = 1 to n;
0037 ol=''
0038 Do j=1 To n
0039 ol=ol format(a.i.j,4,4)
0040 End
0041 ol=ol'  'format(b.i,4,4)
0042 Say ol
0043 end
0044 
0045 call Gauss_elimination
0046 
0047 call Backward_substitution
0048 
0049 Say 'Solutions:'
0050 Do i=1 To n
0051 Say 'x('i')='||x.i
0052 End
0053 
0054 /* Check solutions: */
0055 Say 'Residuals:'
0056 do i = 1 to n
0057 res=0
0058 Do j=1 To n
0059 res=res+(sa.i.j*x.j)
0060 End
0061 res=res-sb.i
0062 Say 'res('i')='res
0063 End
0064 
0065 Exit
0066 
0067 Gauss_elimination:
0068 Do j=1 to n-1
0069 ma=a.j.j
0070 Do ja=j+1 To n
0071 mb=a.ja.j
0072 Do i=1 To n
0073 new=a.j.i*mb-a.ja.i*ma
0074 a.ja.i=new
0075 End
0076 b.ja=b.j*mb-b.ja*ma
0077 End
0078 End
0079 Return
0080 
0081 Backward_substitution:
0082 x.n = b.n / a.n.n
0083 do j = n-1 to 1 by -1
0084 t = 0
0085 do i = j+1 to n
0086 t = t + a.j.i*x.i
0087 end
0088 x.j = (b.j - t) / a.j.j
0089 end
0090 Return
-------------------------------------------------------------------------
Cross Reference Table Solid Variable Names
-------------------------------------------------------------------------
001 t                14 84 86
002 n                15 20
003 NORMAL.3         
004 NORMAL.4         
005 NORMAL.5         
006 NORMAL.6         
007 b.               27 27 27 27 27 27 76
008 i                29 36 50 56 72 85
009 j                30 38 58 68 83
010 sa.              31
011 sb.              33
012 ol               37 39 41
013 res              57 59 61
014 ma               69
015 ja               70
016 mb               71
017 new              73
018 a.               74
019 x.               82 88
-------------------------------------------------------------------------
Cross Reference Table Bizarre Variable Names
-------------------------------------------------------------------------
