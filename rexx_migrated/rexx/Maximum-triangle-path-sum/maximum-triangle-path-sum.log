-------------------------------------------------------------------------
Initial REXX INFILE on 23 Mar 2025 at 10:43:20
-------------------------------------------------------------------------
0001 /*REXX program finds the  maximum sum  of a  path of numbers  in a pyramid of numbers.  */
0002 @.=.;                   @.1  =                            55
0003 @.2  =                          94 48
0004 @.3  =                         95 30 96
0005 @.4  =                       77 71 26 67
0006 @.5  =                      97 13 76 38 45
0007 @.6  =                    07 36 79 16 37 68
0008 @.7  =                   48 07 09 18 70 26 06
0009 @.8  =                 18 72 79 46 59 79 29 90
0010 @.9  =                20 76 87 11 32 07 07 49 18
0011 @.10 =              27 83 58 35 71 11 25 57 29 85
0012 @.11 =             14 64 36 96 27 11 58 56 92 18 55
0013 @.12 =           02 90 03 60 48 49 41 46 33 36 47 23
0014 @.13 =          92 50 48 02 36 59 42 79 72 20 82 77 42
0015 @.14 =        56 78 38 80 39 75 02 71 66 66 01 03 55 72
0016 @.15 =       44 25 67 84 71 67 11 61 40 57 58 89 40 56 36
0017 @.16 =     85 32 25 85 57 48 84 35 47 62 17 01 01 99 89 52
0018 @.17 =    06 71 28 75 94 48 37 10 23 51 06 48 53 18 74 98 15
0019 @.18 =  27 02 92 23 08 71 76 84 15 52 92 63 81 10 44 10 69 93
0020 #.=0
0021 do    r=1  while  @.r\==.                  /*build another version of the pyramid.*/
0022 do k=1  for r;    #.r.k=word(@.r, k)    /*assign a number to an array number.  */
0023 end   /*k*/
0024 end      /*r*/
0025 
0026 do    r=r-1  by -1  to 2;         p=r-1    /*traipse through the pyramid rows.    */
0027 do k=1    for p;               _=k+1    /*reâ”€calculate the previous pyramid row*/
0028 #.p.k=max(#.r.k, #.r._)    +   #.p.k    /*replace the previous number.         */
0029 end   /*k*/
0030 end      /*r*/
0031 /*stick a fork in it,  we're all done. */
0032 say 'maximum path sum: '       #.1.1             /*show the top (row 1) pyramid number. */
-------------------------------------------------------------------------
Cross Reference Table Solid Variable Names
-------------------------------------------------------------------------
001 r                21 26
002 k                22 27
003 p                26
-------------------------------------------------------------------------
Cross Reference Table Bizarre Variable Names
-------------------------------------------------------------------------
001 @.               -> newV1.           2 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19
002 #.               -> newV2.           20 22 28
003 _                -> newV3            27
