-------------------------------------------------------------------------
Initial REXX INFILE on 23 Mar 2025 at 10:43:05
-------------------------------------------------------------------------
0001 /*REXX program to show anonymous recursion of a function or subroutine with memoization.*/
0002 numeric digits 1e6                               /*in case the user goes ka-razy with X.*/
0003 parse arg x .                                    /*obtain the optional argument from CL.*/
0004 if x=='' | x==","  then x= 12                    /*Not specified?  Then use the default.*/
0005 @.= .;     @.0= 0;      @.1= 1                   /*used to implement memoization for FIB*/
0006 w= length(x)                                     /*W:  used for formatting the output.  */
0007 do j=0  for x+1               /*use the  argument  as an upper limit.*/
0008 say 'fibonacci('right(j, w)") ="   fib(j)
0009 end  /*j*/                    /* [↑] show Fibonacci sequence: 0 ──► X*/
0010 exit 0                                           /*stick a fork in it,  we're all done. */
0011 /*──────────────────────────────────────────────────────────────────────────────────────*/
0012 fib: procedure expose @.; arg z;  if z>=0  then return .(z)
0013 say "***error***  argument can't be negative.";   exit
0014 .: procedure expose @.; arg #; if @.#\==.  then return @.#;  @.#=.(#-1)+.(#-2); return @.#
-------------------------------------------------------------------------
Cross Reference Table Solid Variable Names
-------------------------------------------------------------------------
001 x                3 4
002 w                6
003 j                7
-------------------------------------------------------------------------
Cross Reference Table Bizarre Variable Names
-------------------------------------------------------------------------
001 @.               -> newV1.           5 5 5 14
