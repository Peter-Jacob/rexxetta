-------------------------------------------------------------------------
Initial REXX INFILE on 23 Mar 2025 at 10:43:24
-------------------------------------------------------------------------
0001 /*REXX program performs a  "perfect shuffle"  for a number of  even numbered  decks.    */
0002 parse arg X                                      /*optional list of test cases from C.L.*/
0003 if X=''  then X=8 24 52 100 1020 1024 10000      /*Not specified?  Then use the default.*/
0004 w=length(word(X, words(X)))                      /*used for right─aligning the numbers. */
0005 
0006 do j=1  for words(X);  y=word(X,j)           /*use numbers in the test suite (list).*/
0007 
0008 do k=1  for y;       @.k=k;      end /*k*/ /*generate a deck to be used (shuffled)*/
0009 do t=1  until eq();  call magic; end /*t*/ /*shuffle until  before  equals  after.*/
0010 
0011 say 'deck size:'    right(y,w)","       right(t,w)      'perfect shuffles.'
0012 end   /*j*/
0013 exit                                             /*stick a fork in it,  we're all done. */
0014 /*──────────────────────────────────────────────────────────────────────────────────────*/
0015 eq:    do ?=1  for y;   if @.?\==?  then return 0;   end;           return 1
0016 /*──────────────────────────────────────────────────────────────────────────────────────*/
0017 magic: z=0                                       /*set the  Z  pointer  (used as index).*/
0018 h=y%2                                     /*get the half─way (midpoint) pointer. */
0019 do s=1  for h;  z=z+1;  h=h+1    /*traipse through the card deck pips.  */
0020 !.z=@.s;        z=z+1            /*assign left half; then bump pointer. */
0021 !.z=@.h                          /*   "   right  "                      */
0022 end   /*s*/                      /*perform a perfect shuffle of the deck*/
0023 
0024 do r=1  for y;  @.r=!.r;  end    /*re─assign to the original card deck. */
0025 return
-------------------------------------------------------------------------
Cross Reference Table Solid Variable Names
-------------------------------------------------------------------------
001 X                2 3
002 w                4
003 j                6
004 y                6
005 k                8
006 t                9
007 h                18 19
008 s                19
009 z                19 20
010 r                24
-------------------------------------------------------------------------
Cross Reference Table Bizarre Variable Names
-------------------------------------------------------------------------
001 @.               -> newV1.           8 24
002 !.               -> newV2.           20 21
