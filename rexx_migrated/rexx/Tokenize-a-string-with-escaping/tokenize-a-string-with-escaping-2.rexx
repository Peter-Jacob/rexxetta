/*ª*REXX program demonstrates tokenizing and displaying a string with escaping sequences. */
str = 'one^|uno||three^^^^|four^^^|^cuatro|'   /*ª*the character string to be tokenized.*/
esc = '^'                                      /*ª* "    escape  character to be used.  */
sep = '|'                                      /*ª* "  separator     "      "  "   "    */
newV1   =                                          /*ª* "  output string  (so far).         */
eMode = 0                                        /*ª*a flag,  escape is in progress.      */
say ' output len        output'                  /*ª*title  verbiage  used for the output.*/
say 'â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€'          /*ª*  "    separator   "   "   "     "   */

do j=1  for length(str);  newV2=substr(str, j, 1)  /*ª*parse a single character at a time.  */
select
when eMode   then do; newV1=newV1 || newV2;  eMode=0; end      /*ª*are we in in escape  mode?   */
when newV2==esc  then                eMode=1           /*ª*is it an  escape  character? */
when newV2==sep  then do; call show;          end      /*ª* "  " a separator character? */
otherwise             newV1=newV1 || newV2                     /*ª*append the single character. */
end   /*ª*select*/
end       /*ª*j*/

if newV1\=='' | newV2==sep  then call show               /*ª*handle a residual str or a separator.*/
say 'â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€'          /*ª*the foot separator for the output.   */
say '             Â·Â·Â·Â·^Â·Â·Â·Â·1Â·Â·Â·Â·^Â·Â·Â·Â·2'          /*ª*show the    top    part of the scale.*/
say '  {scale}    12345678901234567890'          /*ª*  "   "    bottom    "   "  "    "   */
exit                                             /*ª*stick a fork in it,  we're all done. */
/*ª*â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€*/
show:  say  '[length'right(length(newV1),4)"]"   newV1;                 newV1=;                 return
/* -------------------------------------------------------------------------
 * REXX C:\Users\PeterJ\rexxetta\rexx\Tokenize-a-string-with-escaping\tokenize-a-string-with-escaping-2.rexx was migrated on 23 Mar 2025 at 10:43:33
 * -------------------------------------------------------------------------
*/ 
