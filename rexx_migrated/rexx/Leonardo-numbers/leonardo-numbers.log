-------------------------------------------------------------------------
Initial REXX INFILE on 23 Mar 2025 at 10:43:19
-------------------------------------------------------------------------
0001 /*REXX pgm computes Leonardo numbers, allowing the specification of L(0), L(1), and ADD#*/
0002 numeric digits 500                               /*just in case the user gets ka-razy.  */
0003 @.=1                                             /*define the default for the  @. array.*/
0004 parse arg N L0 L1 a# .                           /*obtain optional arguments from the CL*/
0005 if  N =='' |  N ==","  then    N= 25             /*Not specified?  Then use the default.*/
0006 if L0\=='' & L0\==","  then  @.0= L0             /*Was     "         "   "   "   value. */
0007 if L1\=='' & L1\==","  then  @.1= L1             /* "      "         "   "   "     "    */
0008 if a#\=='' & a#\==","  then  @.a= a#             /* "      "         "   "   "     "    */
0009 say 'The first '   N   " Leonardo numbers are:"  /*display a title for the output series*/
0010 if @.0\==1 | @.1\==1  then say 'using '     @.0     " for L(0)"
0011 if @.0\==1 | @.1\==1  then say 'using '     @.1     " for L(1)"
0012 if @.a\==1            then say 'using '     @.a     " for the  add  number"
0013 say                                              /*display blank line before the output.*/
0014 $=                                               /*initialize the output line to "null".*/
0015 do j=0  for N                       /*construct a list of Leonardo numbers.*/
0016 if j<2  then z=@.j                  /*for the 1st two numbers, use the fiat*/
0017 else do                     /*··· otherwise, compute the Leonardo #*/
0018 _=@.0                  /*save the old primary Leonardo number.*/
0019 @.0=@.1                /*store the new primary number in old. */
0020 @.1=@.0  +  _  +  @.a  /*compute the next Leonardo number.    */
0021 z=@.1                  /*store the next Leonardo number in Z. */
0022 end                    /* [↑]  only 2 Leonardo #s are stored. */
0023 $=$ z                               /*append the just computed # to $ list.*/
0024 end   /*j*/                         /* [↓]  elide the leading blank in  $. */
0025 say strip($)                                     /*stick a fork in it,  we're all done. */
-------------------------------------------------------------------------
Cross Reference Table Solid Variable Names
-------------------------------------------------------------------------
001 N                4 5
002 L0               4
003 L1               4
004 a#               4
005 j                15
006 z                16 21
-------------------------------------------------------------------------
Cross Reference Table Bizarre Variable Names
-------------------------------------------------------------------------
001 @.               -> newV1.           3 6 7 8 19 20
002 $                -> newV2            14 23
003 _                -> newV3            18
