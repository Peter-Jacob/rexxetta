-------------------------------------------------------------------------
Initial REXX INFILE on 23 Mar 2025 at 10:43:29
-------------------------------------------------------------------------
0001 /*REXX program sorts an array of composite structures                 */
0002 /* (which has two classes of data).                                   */
0003 x.=0                           /*number elements in structure (so far)*/
0004 Call add 'tan'   , 0           /*tan    peanut M&M's are  0%  of total*/
0005 Call add 'orange',10           /*orange    "    "     "  10%   "   "  */
0006 Call add 'yellow',20           /*yellow    "    "     "  20%   "   "  */
0007 Call add 'green' ,20           /*green     "    "     "  20%   "   "  */
0008 Call add 'red'   ,20           /*red       "    "     "  20%   "   "  */
0009 Call add 'brown' ,30           /*brown     "    "     "  30%   "   "  */
0010 Call show 'before sort'
0011 Say copies('Â¦', 70)
0012 Call xSort
0013 call show ' after sort'
0014 Exit                           /*stick a fork in it, we're all done.  */
0015 /*--------------------------------------------------------------------*/
0016 add: Procedure Expose x.
0017 z=x.0+1                      /* bump the number of structure entry  */
0018 x.z.color=arg(1)
0019 x.z.pc=arg(2)                /* construct an entry of the structure */
0020 x.0=z
0021 Return
0022 /*--------------------------------------------------------------------*/
0023 show: Procedure Expose x.
0024 Do i=1 To x.0
0025 /* display  what     name               value.                    */
0026 Say right(arg(1),30) right(x.i.color,9) right(x.i.pc,4)'%'
0027 End
0028 Return
0029 /*--------------------------------------------------------------------*/
0030 xsort: Procedure Expose x.
0031 h=x.0
0032 Do While h>1
0033 h=h%2
0034 Do i=1 For x.0-h
0035 j=i
0036 k=h+i
0037 Do While x.k.color<x.j.color
0038 _=x.j.color                 /* swap elements.                 */
0039 x.j.color=x.k.color
0040 x.k.color=_
0041 _=x.j.pc
0042 x.j.pc=x.k.pc
0043 x.k.pc=_
0044 If h>=j Then
0045 Leave
0046 j=j-h
0047 k=k-h
0048 End
0049 End
0050 End
0051 Return
-------------------------------------------------------------------------
Cross Reference Table Solid Variable Names
-------------------------------------------------------------------------
001 x.               3 18 19 20 39 40 42 43
002 z                17
003 i                24 34
004 h                31 33
005 j                35 46
006 k                36 47
-------------------------------------------------------------------------
Cross Reference Table Bizarre Variable Names
-------------------------------------------------------------------------
001 _                -> newV1            38 41
