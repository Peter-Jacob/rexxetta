-------------------------------------------------------------------------
Initial REXX INFILE on 23 Mar 2025 at 10:43:31
-------------------------------------------------------------------------
0001 /*---------------------------------------------------------------------
0002 * X and Y are two different whole numbers greater than 1.
0003 * Their sum is no greater than 100, and Y is greater than X.
0004 * S and P are two mathematicians (and consequently perfect logicians);
0005 * S knows the sum X+Y and P knows the product X*Y.
0006 * Both S and P know all the information in this paragraph.
0007 *
0008 * The following conversation occurs:
0009 *
0010 * * S says "P does not know X and Y."
0011 * * P says "Now I know X and Y."
0012 * * S says "Now I also know X and Y!"
0013 *
0014 * What are X and Y?
0015 *--------------------------------------------------------------------*/
0016 Call time 'R'
0017 max=100
0018 Products.=0
0019 all=''
0020 Do x=2 To max
0021 Do y=x+1 To max-2
0022 If x+y<=100 Then Do
0023 all=all x'/'y
0024 prod=x*y; Products.prod=Products.prod+1
0025 End
0026 End
0027 End
0028 Say "There are" words(all) "pairs where X+Y <=" max "(and X<Y)"
0029 /*---------------------------------------------------------------------
0030 * First eliminate all pairs where the product is unique:
0031 * For each pair we look at the decompositions of the sum (x+y).
0032 * If for any of these decompositions (xa/ya) the product is unique
0033 * then the given sum cannot be the sum of the pair we are looking for
0034 * Otherwise all pairs in the sum's decompositions are eligible.
0035 *--------------------------------------------------------------------*/
0036 sPairs=''
0037 done.=0
0038 Do i=1 To words(all)
0039 xy=word(all,i)
0040 If done.xy Then Iterate
0041 Parse Var xy x '/' y
0042 s=x+y
0043 take=1
0044 el=''
0045 Do xa=2 To s/2
0046 ya=s-xa
0047 m=xa'/'ya
0048 done.m=1
0049 el=el m
0050 prod=xa*ya
0051 If products.prod=1 Then
0052 take=0
0053 End
0054 If take Then
0055 sPairs=sPairs el
0056 End
0057 Say "S starts with" words(sPairs) "possible pairs."
0058 
0059 /*---------------------------------------------------------------------
0060 * From the REMAINING pairs take only these where the product is unique:
0061 * For each pair we look at the decompositions of the known product.
0062 * If for any of these decompositions (xb/yb) the product is unique
0063 * then xb/yb can be the solution of the puzzle and we add it
0064 * to the list of possible pairs.
0065 *--------------------------------------------------------------------*/
0066 sProducts.=0
0067 Do i=1 To words(sPairs)
0068 xy=word(sPairs,i)
0069 Parse Var xy x '/' y
0070 prod=x*y
0071 sProducts.prod=sProducts.prod+1
0072 End
0073 pPairs=''
0074 Do i=1 To words(sPairs)
0075 xy=word(sPairs,i)
0076 Parse Var xy xb '/' yb
0077 prod=xb*yb
0078 If sProducts.prod=1 Then
0079 pPairs=pPairs xy
0080 End
0081 Say "P then has" words(pPairs) "possible pairs."
0082 
0083 /*---------------------------------------------------------------------
0084 * From the now REMAINING pairs take only these where the sum is unique
0085 * Now we look at all possible pairs and find the one (xc/yc)
0086 * with a unique sum which must be the sum we knew from the beginning.
0087 * The pair xc/yc is then the solution
0088 *--------------------------------------------------------------------*/
0089 Sums.=0
0090 Do i=1 To words(pPairs)
0091 xy=word(pPairs,i)
0092 Parse Var xy xc '/' yc
0093 sum=xc+yc
0094 Sums.sum=Sums.sum+1
0095 End
0096 final=''
0097 Do i=1 To words(pPairs)
0098 xy=word(pPairs,i)
0099 Parse Var xy x '/' y
0100 sum=x+y
0101 If Sums.sum=1 Then
0102 final = final xy
0103 End
0104 Select
0105 When words(final)=1 Then Say "Answer:" strip(final)
0106 When words(final)=0 Then Say "No possible answer."
0107 Otherwise Do;            Say words(final) "possible answers:"
0108 Say strip(final)
0109 End
0110 End
0111 Say "Elapsed time:" time('E') "seconds"
0112 Exit
-------------------------------------------------------------------------
Cross Reference Table Solid Variable Names
-------------------------------------------------------------------------
001 xy               99
002 x                99
003 y                99
004 sum              100
005 final            102
-------------------------------------------------------------------------
Cross Reference Table Bizarre Variable Names
-------------------------------------------------------------------------
