-------------------------------------------------------------------------
Initial REXX INFILE on 23 Mar 2025 at 10:43:03
-------------------------------------------------------------------------
0001 /*REXX pgm solves the  100 doors puzzle, doing it the hard way by opening/closing doors.*/
0002 parse xyz with a,b,c
0003 parse arg a,b,c
0004 parse upper var fred aa bb cc
0005 parse arg doors .                                /*obtain the optional argument from CL.*/
0006 if doors=='' | doors==","  then doors=100        /*not specified?  Then assume 100 doors*/
0007 /*        0 =  the door is  closed.    */
0008 /*        1 =   "    "   "  open.      */
0009 door.=0                                          /*assume all doors are closed at start.*/
0010 do #=1  for doors                /*process a pass─through for all doors.*/
0011 do j=#  by #  to doors       /*  ··· every Jth door from this point.*/
0012 door.j= \door.j              /*toggle the  "openness"  of the door. */
0013 end   /*j*/
0014 end       /*#*/
0015 
0016 say 'After '                doors          " passes, the following doors are open:"
0017 say
0018 do k=1  for doors
0019 if door.k  then say right(k, 20) /*add some indentation for the output. */
0020 end    /*k*/                     /*stick a fork in it,  we're all done. */
-------------------------------------------------------------------------
Cross Reference Table Solid Variable Names
-------------------------------------------------------------------------
001 doors            5 6
002 door.            9 12
003 j                11
004 k                18
-------------------------------------------------------------------------
Cross Reference Table Bizarre Variable Names
-------------------------------------------------------------------------
001 #                -> newV1            10
