-------------------------------------------------------------------------
Initial REXX INFILE on 23 Mar 2025 at 10:43:11
-------------------------------------------------------------------------
0001 /*REXX program reorders a set of random colored balls into a correct order, which is the*/
0002 /*────────────────────────────────── order of colors on the Dutch flag:  red white blue.*/
0003 parse arg N colors                               /*obtain optional arguments from the CL*/
0004 if N='' |  N=","  then N=15                      /*Not specified?  Then use the default.*/
0005 if colors=''  then colors= 'red white blue'      /* "      "         "   "   "      "   */
0006 #=words(colors)                                  /*count the number of colors specified.*/
0007 @=word(colors, #)    word(colors, 1)             /*ensure balls aren't already in order.*/
0008 
0009 do g=3  to N                                 /*generate a random # of colored balls.*/
0010 @=@  word( colors, random(1, #) )            /*append a random color to the  @ list.*/
0011 end   /*g*/
0012 
0013 say 'number of colored balls generated = '   N       ;  say
0014 say center(' original ball order ', length(@), "─")
0015 say @                                                ;  say
0016 $=;                          do j=1  for #;
0017 _=word(colors, j);      $=$  copies(_' ',   countWords(_, @))
0018 end   /*j*/
0019 say
0020 say center(' sorted  ball order ', length(@), "─")
0021 say space($)
0022 say
0023 do k=2  to  N                                /*verify the balls are in correct order*/
0024 if wordpos(word($,k), colors) >= wordpos(word($,k-1), colors)  then iterate
0025 say "The list of sorted balls isn't in proper order!";         exit 13
0026 end   /*k*/
0027 say
0028 say 'The sorted colored ball list has been confirmed as being sorted correctly.'
0029 exit                                             /*stick a fork in it,  we're all done. */
0030 /*──────────────────────────────────────────────────────────────────────────────────────*/
0031 countWords:  procedure;   parse arg ?,hay;  s=1
0032 do r=0  until _==0;  _=wordpos(?, hay, s);  s=_+1;  end /*r*/;  return r
-------------------------------------------------------------------------
Cross Reference Table Solid Variable Names
-------------------------------------------------------------------------
001 hay              31
002 s                31 32
003 r                32
-------------------------------------------------------------------------
Cross Reference Table Bizarre Variable Names
-------------------------------------------------------------------------
001 #                -> newV1            6
002 @                -> newV2            7 10
003 $                -> newV3            16 17
004 _                -> newV4            17 32
005 ?                -> newV5            31
