/*ª*REXX program  calculates and displays all   amicable pairs   up to  a given number.   */
parse arg H .;  if H=='' | H==","  then H= 20000 /*ª*get optional arguments  (high limit).*/
w= length(H) ;  low= 220                         /*ª*W: used for columnar output alignment*/
newV1.=.                                             /*ª* [â†‘]  LOW is lowest amicable number. */
do k=low  for H-low;     newV2= sigma(k)        /*ª*generate sigma sums for a range of #s*/
if newV2>=low  then newV1.k= newV2                      /*ª*only keep the pertinent sigma sums.  */
end   /*ª*k*/                                 /*ª* [â†‘]   process a range of integers.  */
newV3= 0                                             /*ª*number of amicable pairs found so far*/
do   m=low  to  H;       n= newV1.m             /*ª*start the search at the lowest number*/
if m==newV1.n  then do                          /*ª*If equal, might be an amicable number*/
if m==n  then iterate       /*ª*Is this a perfect number?  Then skip.*/
newV3= newV3 + 1                    /*ª*bump the  amicable pair  counter.    */
say right(m,w)    ' and '     right(n,w)     " are an amicable pair."
m= n                        /*ª*start   M   (DO index)  from  N.     */
end
end    /*ª*m*/
say
say newV3    ' amicable pairs found up to '     H    /*ª*display count of the amicable pairs. */
exit                                             /*ª*stick a fork in it,  we're all done. */
/*ª*â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€*/
sigma: procedure; parse arg x;     od= x // 2    /*ª*use either  EVEN  or  ODD  integers. */
s= 1                                      /*ª*set initial sigma sum to unity.   ___*/
do j=2+od  by 1+od  while  j*j<x  /*ª*divide by all integers up to the âˆš X */
if x//j==0  then  s= s + j + x%j  /*ª*add the two divisors to the sum.     */
end   /*ª*j*/                       /*ª* [â†‘]  %  is REXX integer division.   */
/*ª*                                 ___ */
if j*j==x  then  return s + j             /*ª*Was  X  a square?   If so, add  âˆš X  */
return s                 /*ª*return (sigma) sum of the divisors.  */
/* -------------------------------------------------------------------------
 * REXX C:\Users\PeterJ\rexxetta\rexx\Amicable-pairs\amicable-pairs-2.rexx was migrated on 23 Mar 2025 at 10:43:05
 * -------------------------------------------------------------------------
*/ 
