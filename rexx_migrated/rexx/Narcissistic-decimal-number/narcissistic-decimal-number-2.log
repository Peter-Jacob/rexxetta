-------------------------------------------------------------------------
Initial REXX INFILE on 23 Mar 2025 at 10:43:22
-------------------------------------------------------------------------
0001 /*REXX program  generates and displays  a number of  narcissistic (Armstrong)  numbers. */
0002 numeric digits 39                                /*be able to handle largest Armstrong #*/
0003 parse arg N .                                    /*obtain optional argument from the CL.*/
0004 if N=='' | N==","  then N=25                     /*Not specified?  Then use the default.*/
0005 N=min(N, 89)                                     /*there are only  89  narcissistic #s. */
0006 
0007 do     p=1  for 39                          /*generate tables:   digits ^ P power. */
0008 do i=0  for 10;      @.p.i= i**p        /*build table of ten digits ^ P power. */
0009 end   /*i*/
0010 end       /*w*/                             /* [↑]  table is a fixed (limited) size*/
0011 #=0                                              /*number of narcissistic numbers so far*/
0012 do j=0  until #==N;      L=length(j)        /*get length of the  J  decimal number.*/
0013 _=left(j, 1)                                /*select the first decimal digit to sum*/
0014 $=@.L._                                     /*sum of the J dec. digits ^ L (so far)*/
0015 do k=2  for L-1  until $>j        /*perform for each decimal digit in  J.*/
0016 _=substr(j, k, 1)                 /*select the next decimal digit to sum.*/
0017 $=$ + @.L._                       /*add dec. digit raised to power to sum*/
0018 end   /*k*/                       /* [↑]  calculate the rest of the sum. */
0019 
0020 if $\==j  then iterate                      /*does the sum equal to J?  No, skip it*/
0021 #=# + 1                                     /*bump count of narcissistic numbers.  */
0022 say right(#, 9)     ' narcissistic:'     j  /*display index and narcissistic number*/
0023 end   /*j*/                                 /*stick a fork in it,  we're all done. */
-------------------------------------------------------------------------
Cross Reference Table Solid Variable Names
-------------------------------------------------------------------------
001 N                3 4 5
002 p                7
003 i                8
004 j                12
005 L                12
006 k                15
-------------------------------------------------------------------------
Cross Reference Table Bizarre Variable Names
-------------------------------------------------------------------------
001 @.               -> newV1.           8
002 #                -> newV2            11 21
003 _                -> newV3            13 16
004 $                -> newV4            14 17
