-------------------------------------------------------------------------
Initial REXX INFILE on 23 Mar 2025 at 10:43:04
-------------------------------------------------------------------------
0001 /*REXX pgm solves the 4-rings puzzle,  where letters represent unique (or not) digits). */
0002 arg LO HI unique show .                          /*the  ARG  statement capitalizes args.*/
0003 if LO=='' | LO==","  then LO=1                   /*Not specified?  Then use the default.*/
0004 if HI=='' | HI==","  then HI=7                   /* "      "         "   "   "     "    */
0005 if unique=='' | unique==',' | unique=='UNIQUE'  then u=1       /*unique letter solutions*/
0006 else u=0       /*non-unique        "    */
0007 if   show=='' |   show==',' |   show=='SHOW'    then show=1    /*noshow letter solutions*/
0008 else show=0    /*  show    "       "    */
0009 w=max(3, length(LO), length(HI) )                /*maximum width of any number found.   */
0010 bar=copies('═', w)                               /*define a horizontal bar (for title). */
0011 times=HI - LO + 1                                /*calculate number of times to loop.   */
0012 #=0                                              /*number of solutions found (so far).  */
0013 do       a=LO  for times
0014 do      b=LO  for times;  if u  then  if b==a                           then iterate
0015 do     c=LO  for times;  if u  then  if c==a|c==b                      then iterate
0016 do    d=LO  for times;  if u  then  if d==a|d==b|d==c                 then iterate
0017 do   e=LO  for times;  if u  then  if e==a|e==b|e==c|e==d            then iterate
0018 do  f=LO  for times;  if u  then  if f==a|f==b|f==c|f==d|f==e       then iterate
0019 do g=LO  for times;  if u  then  if g==a|g==b|g==c|g==d|g==e|g==f  then iterate
0020 sum=a+b
0021 if f+g==sum & b+c+d==sum & d+e+f==sum  then #=#+1      /*bump # of solutions.*/
0022 else iterate    /*sum not equal, no─go*/
0023 if #==1  then call align  'a',  'b',  'c',  'd',  'e',  'f',  'g'
0024 if #==1  then call align  bar,  bar,  bar,  bar,  bar,  bar,  bar
0025 call align   a,    b,    c,    d,    e,    f,    g
0026 end   /*g*/                                        /*for 1st time, show title*/
0027 end    /*f*/
0028 end     /*e*/
0029 end      /*d*/
0030 end       /*c*/
0031 end        /*b*/
0032 end         /*a*/
0033 say
0034 _= ' non-unique'
0035 if u  then _= ' unique '
0036 say #  _  'solutions found.'
0037 exit                                             /*stick a fork in it,  we're all done. */
0038 /*──────────────────────────────────────────────────────────────────────────────────────*/
0039 align: parse arg a1,a2,a3,a4,a5,a6,a7
0040 if show  then say  left('',9)  center(a1,w) center(a2,w) center(a3,w) center(a4,w),
0041 center(a5,w) center(a6,w) center(a7,w)
0042 return
-------------------------------------------------------------------------
Cross Reference Table Solid Variable Names
-------------------------------------------------------------------------
001 a1               39
002 a2               39
003 a3               39
004 a4               39
005 a5               39
006 a6               39
007 a7               39
-------------------------------------------------------------------------
Cross Reference Table Bizarre Variable Names
-------------------------------------------------------------------------
001 #                -> newV1            12 21
002 _                -> newV2            34 35
