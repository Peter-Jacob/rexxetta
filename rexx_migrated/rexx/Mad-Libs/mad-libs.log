-------------------------------------------------------------------------
Initial REXX INFILE on 23 Mar 2025 at 10:43:20
-------------------------------------------------------------------------
0001 /*REXX program prompts the user for a template substitutions within a story  (MAD LIBS).*/
0002 parse arg iFID .                                 /*allow user to specify the input file.*/
0003 if iFID=='' | iFID=="," then iFID="MAD_LIBS.TXT" /*Not specified?  Then use the default.*/
0004 @.=                                              /*assign defaults to some variables.   */
0005 $=;          do recs=1  while  lines(iFID)\==0   /*read the input file until it's done. */
0006 @.recs=linein(iFID);  $=$  @.recs   /*read a record;  and append it to  @  */
0007 if @.recs=''  then leave            /*Read a blank line?   Then we're done.*/
0008 end  /*recs*/
0009 recs=recs-1                                      /*adjust for a E─O─F  or  a blank line.*/
0010 pm= 'please enter a word or phrase to replace: ' /*this is part of the  Prompt Message. */
0011 !.=0                                             /*placeholder for phrases in  MAD LIBS.*/
0012 #=0;    do  forever                              /*look for templates within the text.  */
0013 parse var  $   '<'   ?   ">"   $         /*scan for   <ααα>   stuff in the text.*/
0014 if ?=''   then leave                     /*No   ααα ?   Then we're all finished.*/
0015 if !.?    then iterate                   /*Already asked?   Then keep scanning. */
0016 !.?=1                                    /*mark this   ααα   as being  "found". */
0017 do  until  ans\=''                /*prompt user for a replacement.       */
0018 say '───────────'   pm    ?       /*prompt the user with a prompt message*/
0019 parse pull ans                    /*PULL  obtains the text from console. */
0020 end   /*forever*/
0021 #=#+1                                    /*bump the template counter.           */
0022 old.# = '<'?">";           new.# = ans   /*assign the "old" name and "new" name.*/
0023 end   /*forever*/
0024 say                                              /*display a blank line for a separator.*/
0025 say;  say copies('═', 79)                        /*display a blank line  and  a fence.  */
0026 
0027 do m=1  for recs                         /*display the text,  line for line.    */
0028 do n=1  for #                    /*perform substitutions in the text.   */
0029 @.m=changestr(old.n, @.m, new.n) /*maybe replace text in  @.m  haystack.*/
0030 end   /*n*/
0031 say @.m                                  /*display the (new) substituted text.  */
0032 end   /*m*/
0033 
0034 say copies('═', 79)                              /*display a  final (output) fence.     */
0035 say                                              /*stick a fork in it,  we're all done. */
-------------------------------------------------------------------------
Cross Reference Table Solid Variable Names
-------------------------------------------------------------------------
001 pull             19
002 ans              19
003 old.             22
004 new.             22
005 m                27
006 n                28
-------------------------------------------------------------------------
Cross Reference Table Bizarre Variable Names
-------------------------------------------------------------------------
001 @.               -> newV1.           4 6 29
002 !.               -> newV2.           11 16
003 $                -> newV3            5 6 13 13
004 #                -> newV4            12 21
005 ?                -> newV5            13
