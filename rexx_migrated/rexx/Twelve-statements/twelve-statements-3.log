-------------------------------------------------------------------------
Initial REXX INFILE on 23 Mar 2025 at 10:43:34
-------------------------------------------------------------------------
0001 /*REXX program solves the  "Twelve Statement Puzzle".                                   */
0002 q=12;      @stmt=right('statement',20)           /*number of statements in the puzzle.  */
0003 m=0                                              /*[↓]  statement one is  TRUE  by fiat.*/
0004 do pass=1  for 2                           /*find the maximum number of  "trues". */
0005 do e=0   for 2**(q-1);    n = '1'right( x2b( d2x( e ) ),  q-1,  0)
0006 parse var  n  @1 2 @2 3 @3 4 @4 5 @5 6 @6 7 @7 8 @8 9 @9 10 @10 11 @11 12 @12
0007 /*▒▒▒▒  if @1  then   if \ @1                           then iterate  ▒▒▒▒*/
0008 if @2  then   if @7+@8+@9+@10+@11+@12  \==3     then iterate
0009 if @3  then   if @2+@4+@6+@8+@10+@12   \==2     then iterate
0010 if @4  then   if @5  then if \(@6 & @7)         then iterate
0011 if @5  then   if @2  |  @3  |  @4               then iterate
0012 if @6  then   if @1+@3+@5+@7+@9+@11    \==4     then iterate
0013 if @7  then   if \ (@2  &&  @3 )                then iterate
0014 if @8  then   if @7  then  if \(@5 & @6)        then iterate
0015 if @9  then   if @1+@2+@3+@4+@5+@6     \==3     then iterate
0016 if @10 then   if \ (@11 & @12)                  then iterate
0017 if @11 then   if @7+@8+@9              \==1     then iterate
0018 g=@1 + @2 + @3 + @4 + @5 + @6 + @7 + @8 + @9 + @10 + @11
0019 if @12 then   if g                     \==4     then iterate
0020 g=g + @12
0021 if pass==1  then do;  m=max(m,g);  iterate;  end
0022 else if g\==m     then iterate
0023 do j=1  for q;  z=substr(n, j, 1)
0024 if z  then say  @stmt right(j, 2)        " is "        word('false true', 1+z)
0025 end   /*j*/
0026 end       /*e*/
0027 end         /*pass*/                       /*stick a fork in it,  we're all done. */
-------------------------------------------------------------------------
Cross Reference Table Solid Variable Names
-------------------------------------------------------------------------
001 n                6
002 g                18 20
003 m                21
004 j                23
005 z                23
-------------------------------------------------------------------------
Cross Reference Table Bizarre Variable Names
-------------------------------------------------------------------------
001 @stmt            -> newV1            2
002 @10              -> newV2            6
003 @11              -> newV3            6
004 @12              -> newV4            6
005 @1               -> newV5            6
006 @2               -> newV6            6
007 @3               -> newV7            6
008 @4               -> newV8            6
009 @5               -> newV9            6
010 @6               -> newV10           6
011 @7               -> newV11           6
012 @8               -> newV12           6
013 @9               -> newV13           6
