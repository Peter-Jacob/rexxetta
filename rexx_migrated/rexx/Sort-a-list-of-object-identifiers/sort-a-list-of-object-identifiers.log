-------------------------------------------------------------------------
Initial REXX INFILE on 23 Mar 2025 at 10:43:29
-------------------------------------------------------------------------
0001 /*REXX program performs a  sort  of  OID  (Object IDentifiers ◄── used in Network data).*/
0002 call gen                                         /*generate an array (@.) from the OIDs.*/
0003 call show   'before sort ───► '                  /*display the  @  array before sorting.*/
0004 say copies('░', 79) /*   "   fence, separate before & after*/
0005 call adj    1                                    /*expand  the  $  list of OID numbers. */
0006 call bSort  #                                    /*sort     "   "    "   "  "     "     */
0007 call adj    0                                    /*shrink   "   "    "   "  "     "     */
0008 call show   ' after sort ───► '                  /*display the  @  array after sorting. */
0009 exit                                             /*stick a fork in it,  we're all done. */
0010 /*──────────────────────────────────────────────────────────────────────────────────────*/
0011 bSort: procedure expose @.; parse arg n;   m=n-1 /*N: is the number of @ array elements.*/
0012 do m=m  for m  by -1  until ok;  ok= 1 /*keep sorting the @ array until done. */
0013 do j=1  for m;     _= j + 1         /*calculate the next (index) in @ array*/
0014 if @.j>@._  then parse value    @.j  @._  0      with      @._  @.j  ok
0015 end   /*j*/                         /* [↑]  swap two out─of─order elements.*/
0016 end      /*m*/                         /* [↑]  use a simple  bubble  sort.    */
0017 return
0018 /*──────────────────────────────────────────────────────────────────────────────────────*/
0019 gen:   $=    1.3.6.1.4.1.11.2.17.19.3.4.0.10 ,   /* ◄──┐                                */
0020 1.3.6.1.4.1.11.2.17.5.2.0.79    ,   /* ◄──┤                                */
0021 1.3.6.1.4.1.11.2.17.19.3.4.0.4  ,   /* ◄──┼─◄─ six OID numbers (as a list).*/
0022 1.3.6.1.4.1.11150.3.4.0.1       ,   /* ◄──┤                                */
0023 1.3.6.1.4.1.11.2.17.19.3.4.0.1  ,   /* ◄──┤                                */
0024 1.3.6.1.4.1.11150.3.4.0             /* ◄──┘                                */
0025 w= 0                                                      /*W: max length of #'s.*/
0026 #= words($);     do i=1  for #;    @.i= word($, i);    w= max(w, length(@.i) )
0027 end   /*i*/                              /*W: max length of #'s.*/
0028 return
0029 /*──────────────────────────────────────────────────────────────────────────────────────*/
0030 adj:   arg LZ;  do j=1  for #;       x= translate(@.j, , .);  y= /*construct X version. */
0031 do k=1  for words(x);           _= word(x, k) /*get a number in  X.  */
0032 if LZ  then y= y right(_, w, 0)               /*(prepend) leading 0's*/
0033 else y= y    (_   +   0)               /* (elide)     "     " */
0034 end   /*k*/
0035 @.j = translate( space(y), ., ' ')               /*reconstitute number. */
0036 end      /*j*/                                   /*LZ:  Leading Zero(s).*/
0037 return                                                    /*──   ─       ─       */
0038 /*──────────────────────────────────────────────────────────────────────────────────────*/
0039 show:  do a=1 for #; say right("OID number",20) right(a,length(#)) arg(1) @.a; end; return
-------------------------------------------------------------------------
Cross Reference Table Solid Variable Names
-------------------------------------------------------------------------
001 n                11
002 m                11 12
003 ok               12 14
004 j                13 30
005 NORMAL.5         
006 NORMAL.6         
007 NORMAL.7         
008 NORMAL.8         
009 NORMAL.9         
010 NORMAL.10        
011 NORMAL.11        
012 NORMAL.12        
013 NORMAL.13        
014 NORMAL.14        
015 NORMAL.15        
016 NORMAL.16        
017 w                25 26
018 i                26
019 x                30
020 y                30 32
021 k                31
-------------------------------------------------------------------------
Cross Reference Table Bizarre Variable Names
-------------------------------------------------------------------------
001 @.               -> newV1.           14 14 26 35
002 _                -> newV2            13 31
003 #                -> newV3            26
