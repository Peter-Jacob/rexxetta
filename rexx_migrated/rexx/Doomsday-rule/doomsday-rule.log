-------------------------------------------------------------------------
Initial REXX INFILE on 23 Mar 2025 at 10:43:11
-------------------------------------------------------------------------
0001 /*REXX program finds the day─of─week for a specified date using Conway's Doomsday rule. */
0002 parse arg $                                      /*obtain optional arguments from the CL*/
0003 if $='' | $=","  then $=  ,                      /*Not specified?  Then use the default.*/
0004 '01/06/1800 03/29/1875 12/07/1915 12/23/1970 05/14/2043 04/02/2077 04/02/2101'
0005 d= 'Sun Mon Tues Wednes Thurs Fri Satur'         /*list of days of the week, sans "day".*/
0006 y.0= 3 7 7 4 2 6 4 1 5 3 7 5                     /*doomsday dates for non-leapyear month*/
0007 y.1= 4 1 7 4 2 6 4 1 5 3 7 5                     /*    "      "    "      leapyear   "  */
0008 
0009 do j=1  for words($);        datum= word($, j)    /*process each of the dates.    */
0010 parse var  datum    mm  '/'  dd  "/"  yy          /*parse the date  ──►  mm dd yy */
0011 ly= leapyear(yy)                                  /*get indication of a leapyear. */
0012 wd= (doomsday(yy)+dd-word(y.ly, mm) + 7) // 7 + 1 /*obtain a code for the weekday.*/
0013 say datum    ' falls on '    word(d, wd)"day"     /*display day-of-week for date. */
0014 end   /*j*/
0015 exit 0                                           /*stick a fork in it,  we're all done. */
0016 /*──────────────────────────────────────────────────────────────────────────────────────*/
0017 doomsday: parse arg ?;  return (2  +  5 * (?//4)  +  4 * (?//100)  +  6 * (?//400) ) // 7
0018 leapyear: arg #; ly= #//4==0; if ly==0  then return 0;   return ((#//100\==0) | #//400==0)
-------------------------------------------------------------------------
Cross Reference Table Solid Variable Names
-------------------------------------------------------------------------
001 ly               18
-------------------------------------------------------------------------
Cross Reference Table Bizarre Variable Names
-------------------------------------------------------------------------
001 $                -> newV1            2 3
002 ?                -> newV2            17
