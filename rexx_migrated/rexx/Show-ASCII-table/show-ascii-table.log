-------------------------------------------------------------------------
Initial REXX INFILE on 23 Mar 2025 at 10:43:28
-------------------------------------------------------------------------
0001 /*REXX program displays an  ASCII  table of characters  (within a  16x16  indexed grid).*/
0002 parse upper version !ver .                       /*some REXXes can't display '1b'x glyph*/
0003 !pcRexx= 'REXX/PERSONAL'==!ver | "REXX/PC"==!ver /*is this  PC/REXX  or  REXX/Personal? */
0004 func= '  nul soh stx etx eot enq ack bel  bs tab  lf  vt  ff  cr  so  si  '  ||,
0005 "  dle dc1 dc2 dc3 dc4 nak syn etb can  em eof esc  fs  gs  rs  us  "
0006 @.=
0007 @.1= "x'07'    x'08'       x'09'     x'0a'      x'0d'      x'1a'      x'1b'     x'20'"
0008 @.2= "bel      b/s         tab       l/f        c/r        eof        esc       bla"
0009 @.3= "bell     backspace   tabchar   linefeed   carriage   end-of-    escape    blank"
0010 @.4= "                                          return     file"
0011 @.5= copies('≈', 79)
0012 do a=1  for 8;   say @.a             /*display header info  (abbreviations).*/
0013 end   /*a*/                          /*also included are three blank lines. */
0014 b= ' ';         hdr= left(b, 7)                  /*prepend blanks to HDR  (indentation).*/
0015 call xhdr                                        /*construct a  top  index for the grid.*/
0016 call grid '╔',  "╤",  '╗',  "═══"                /*construct & display bottom of a cell.*/
0017 iidx= left(b, length(hdr) - 4 )                  /*the length of the indentation of idx.*/
0018 cant= copies('═', 3)                             /*can't show a character with this REXX*/
0019 /* [↓]  construct a sixteen-row grid.  */
0020 do j=0  by 16  for 16;  idx= left(d2x(j),1,2) /*prepend an index literal for the grid*/
0021 _= iidx idx b;           _h= iidx "   "       /*an index and indent; without an index*/
0022 sep= '║'                                      /*assign a character to cell separator.*/
0023 do #=j  to j+15;               chr= center( d2c(#), 3)   /*true char glyph.*/
0024 if #>6 & #<11  |  #==13   then chr= cant         /*can't show these glyphs.*/
0025 /*esc*/   if #==27 then if !pcRexx  then chr= cant         /*  "     "  this  glyph. */
0026 else chr= center( d2c(#), 3)   /*true char glyph.*/
0027 if # <32 then _h= _h || sep || right(word(func, #+1), 3) /*show a function.*/
0028 if #==32 then chr= 'bla'            /*spell out (within 3 chars) a "BLAnk".*/
0029 if # >31 then _h=                   /*Above a blank?  Then nullify 3rd line*/
0030 _= _ || sep || chr;     sep= '│'    /*append grid cell; use a new sep char.*/
0031 end   /*#*/
0032 if _h\==''  then say _h"║ "                   /*append the  last grid cell character.*/
0033 say _'║ '   idx                               /*append an   index   to the grid line.*/
0034 if j\==240  then call grid '╟',"┼",'╢',"───"  /*construct & display most cell bottoms*/
0035 end   /*j*/
0036 
0037 call grid '╚',  "╧",  '╝',  "═══"                /*construct & display last cell bottom.*/
0038 call xhdr                                        /*construct a bottom index for the grid*/
0039 exit                                             /*stick a fork in it,  we're all done. */
0040 /*──────────────────────────────────────────────────────────────────────────────────────*/
0041 xhdr: say; _= hdr;  sep= b;   do k=0  for 16; _=_||b d2x(k)b;  end;    say _; say;  return
0042 grid: arg $1,$2,$3,$4; _=hdr; do 16;  _=_ || $1 || $4;  $1= $2;  end;  say _ || $3; return
-------------------------------------------------------------------------
Cross Reference Table Solid Variable Names
-------------------------------------------------------------------------
001 version          2
002 func             4
003 a                12
004 b                14
005 hdr              14
006 iidx             17
007 cant             18
008 j                20
009 idx              20
010 sep              22 30 41
011 chr              23 24 25 28
012 k                41
-------------------------------------------------------------------------
Cross Reference Table Bizarre Variable Names
-------------------------------------------------------------------------
001 !pcRexx          -> newV1            3
002 !ver             -> newV2            2
003 @.               -> newV3.           6 7 8 9 10 11
004 _h               -> newV4            21 27 29
005 $1               -> newV5            42
006 _                -> newV6            21 30 41 41 42 42
007 #                -> newV7            23
