/*ª*REXX program finds & displays  N  Sundaram primes, or displays the Nth Sundaram prime.*/
parse arg n cols .                               /*ª*get optional number of primes to find*/
if    n=='' |    n==","  then    n= 100          /*ª*Not specified?   Then assume default.*/
if cols=='' | cols==","  then cols=  10          /*ª* "      "          "     "       "   */
newV1.= .;                             lim= 16 * n   /*ª*default value for array; filter limit*/
do    j=1  for n;   do k=1  for n  until newV2>lim;  newV2= j + k + 2*j*k;  newV1.newV2=
end   /*ª*k*/
end      /*ª*j*/
w= 10                                            /*ª*width of a number in any column.     */
title= 'a list of '   commas(N)   " Sundaram primes"
if cols>0  then say ' index â”‚'center(title,  1 + cols*(w+1)     )
if cols>0  then say 'â”€â”€â”€â”€â”€â”€â”€â”¼'center(""   ,  1 + cols*(w+1), 'â”€')
newV3= 0;                         idx= 1             /*ª*initialize # of Sundaram primes & IDX*/
newV4=                                               /*ª*a list of Sundaram primes  (so far). */
do j=1  until newV3==n                        /*ª*display the output (if cols > 0).    */
if newV1.j\==.  then iterate                  /*ª*Is the number not prime?  Then skip. */
newV3= newV3 + 1                                  /*ª*bump number of Sundaram primes found.*/
a= j                                      /*ª*save J for calculating the Nth prime.*/
if cols<=0  then iterate                  /*ª*Build the list  (to be shown later)? */
c= commas(j + j + 1)                      /*ª*maybe add commas to  Sundaram  prime.*/
newV4= newV4  right(c, max(w, length(c) ) )       /*ª*add Sundaram primeâ”€â”€â–ºlist, allow big#*/
if newV3//cols\==0  then iterate              /*ª*have we populated a line of output?  */
say center(idx, 7)'â”‚'  substr(newV4, 2);  newV4=  /*ª*display what we have so far  (cols). */
idx= idx + cols                           /*ª*bump the  index  count for the output*/
end   /*ª*j*/

if newV4\==''  then say center(idx, 7)"â”‚"  substr(newV4, 2)  /*ª*possible display residual output.*/
if cols>0  then say 'â”€â”€â”€â”€â”€â”€â”€â”´'center(""   ,  1 + cols*(w+1), 'â”€')
say
say 'found ' commas(newV3)  " Sundaram primes, and the last Sundaram prime is "  commas(a+a+1)
exit 0                                           /*ª*stick a fork in it,  we're all done. */
/*ª*â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€*/
commas: parse arg newV5;  do jc=length(newV5)-3  to 1  by -3; newV5=insert(',', newV5, jc); end;  return newV5
/* -------------------------------------------------------------------------
 * REXX C:\Users\PeterJ\rexxetta\rexx\The-sieve-of-Sundaram\the-sieve-of-sundaram.rexx was migrated on 23 Mar 2025 at 10:43:33
 * -------------------------------------------------------------------------
*/ 
